/*! For license information please see main.980dbd007d96c3fcdd53.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/components/Canvas/About/Gallery.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});var i=t("./node_modules/lodash/map.js"),h=t("./app/components/Canvas/About/Media.js"),o=t("./node_modules/gsap/index.js");class n{constructor({element:e,geometry:s,index:t,gl:i,scene:h,sizes:o}){this.element=e,this.geometry=s,this.index=t,this.gl=i,this.scene=h,this.sizes=o,this.scroll={current:0,target:0,last:0,lerp:.1},this.createMedias()}createMedias(){this.mediasElements=this.element.querySelectorAll(".about__gallery__media"),this.media=i(this.mediasElements,((e,s)=>new h.default({element:e,geometry:this.geometry,index:s,gl:this.gl,scene:this.scene,sizes:this.sizes})))}onResize(e){this.bounds=this.element.getBoundClientRect(),this.sizes=e.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll=0,i(this.medias,(s=>s.onResize(e,this.scroll)))}onTouchDown({x:e,y:s}){this.scroll.target=this.scroll}onTouchMove({x:e,y:s}){const t=e.start-e.end;this.scroll.target=this.scrollCurrent-t}onTouchUp({x:e,y:s}){}update(){this.bounds&&(this.scroll.current<this.scroll.target?this.direction="right":this.scroll.current>this.scroll.target&&(this.direction="left"),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),i(this.medias,((e,s)=>{const t=e.mesh.scale.x/2;e.mesh.scale.y;if("left"===this.direction){e.mesh.position.x+t<-this.sizes.width/2&&(e.extra.x+=this.gallerySizes.width,e.mesh.rotation.z=o.default.utils.random(.03*-Math.PI,.03*Math.PI))}else if("right"===this.direction){e.mesh.position.x-t>this.sizes.width/2&&(e.extra.x-=this.gallerySizes.width,e.mesh.rotation.z=o.default.utils.random(.03*-Math.PI,.03*Math.PI))}e.update(this.scroll)})))}}},"./app/components/Canvas/About/Media.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var i=t("./node_modules/ogl/src/core/Texture.js"),h=t("./node_modules/ogl/src/core/Program.js"),o=t("./node_modules/ogl/src/core/Mesh.js"),n=t("./node_modules/gsap/index.js"),r=t("./app/shaders/plane-fragment.glsl"),a=t("./app/shaders/plane-vertex.glsl");const l=class{constructor({element:e,geometry:s,gl:t,index:i,scene:h,sizes:o}){this.element=e,this.geometry=s,this.gl=t,this.scene=h,this.index=i,this.sizes=o,this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){this.texture=new i.Texture(this.gl),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:r.default,vertex:a.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new o.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.rotation.z=n.default.utils.random(.03*-Math.PI,.03*Math.PI)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(e),this.updateX(),this.updateY()}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}update(e){this.bounds&&(this.updateX(e.x),this.updateY(e.y))}onResize(e,s){this.createBounds(e),this.extra={x:0,y:0},this.updateX(s?s.x:0),this.updateY(s?s.y:0)}}},"./app/components/Canvas/About/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t("./app/components/Canvas/About/Gallery.js"),h=t("./node_modules/lodash/map.js"),o=t("./node_modules/ogl/src/core/Transform.js"),n=t("./node_modules/ogl/src/extras/Plane.js");const r=class{constructor({gl:e,scene:s,sizes:t}){this.group=new o.Transform,this.gl=e,this.sizes=t,this.createGeometry(),this.createGalleries(),this.group.setParent(s)}createGeometry(){this.geometry=new n.Plane(this.gl)}createGalleries(){this.galleriesElements=document.querySelectorAll(".about__gallery"),this.galleries=h(this.galleriesElements,((e,s)=>new i.default({element:e,geometry:this.geometry,index:s,gl:this.gl,scene:this.group,sizes:this.sizes})))}onResize(e){h(this.galleries,(s=>s.onResize(e)))}onTouchDown({event:e}){h(this.galleries,(s=>s.onTouchDown(e)))}onTouchMove({event:e}){h(this.galleries,(s=>s.onTouchMove(e)))}onTouchUp({event:e}){h(this.galleries,(s=>s.onTouchUp(e)))}onWheel({pixelX:e,pixelY:s}){}update(){mapEach(this.galleries,(e=>e.update()))}}},"./app/components/Canvas/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t("./node_modules/ogl/src/core/Renderer.js"),h=t("./node_modules/ogl/src/core/Camera.js"),o=t("./node_modules/ogl/src/core/Transform.js"),n=t("./app/components/Canvas/Home/index.js");t("./app/components/Canvas/About/index.js");class r{constructor(){this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0},this.createRenderer(),this.createCamera(),this.createScene(),this.onResize(),this.createHome()}createRenderer(){this.renderer=new i.Renderer({alpha:!0,antialias:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new h.Camera(this.gl),this.camera.position.z=5}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}createScene(){this.scene=new o.Transform}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const e=this.camera.fov*(Math.PI/180),s=2*Math.tan(e/2)*this.camera.position.z,t=s*this.camera.aspect;this.sizes={height:s,width:t},this.home&&this.home.onResize({sizes:this.sizes})}onTouchDown(e){this.isDown=!0,this.x.start=e.touches?e.touches[0].clientX:e.clientX,this.y.start=e.touches?e.touches[0].clientY:e.clientY,this.home&&this.home.onTouchDown({x:this.x,y:this.y})}onTouchMove(e){if(!this.isDown)return;const s=e.touches?e.touches[0].clientX:e.clientX,t=e.touches?e.touches[0].clientY:e.clientY;this.x.end=s,this.y.end=t,this.home&&this.home.onTouchMove({x:this.x,y:this.y})}onTouchUp(e){this.isDown=!1;const s=e.touches?e.touches[0].clientX:e.clientX,t=e.touches?e.touches[0].clientY:e.clientY;this.x.end=s,this.y.end=t,this.home&&this.home.onTouchUp({x:this.x,y:this.y})}onWheel(e){this.home&&this.home.onWheel(e)}update(){this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"03dabcec376653012f38"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,