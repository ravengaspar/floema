/*! For license information please see main.40a1333dc3f8ed13520e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/components/Preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var n=s("./app/classes/Component.js"),o=s("./node_modules/lodash/each.js"),a=s("./node_modules/gsap/index.js");s("./app/utils/text.js");class i extends n.default{constructor(){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number__text",images:document.querySelectorAll("img")}}),this.length=0,this.createLoader()}createLoader(){o(this.elements.images,(e=>{e.onload=t=>this.onAssetLoaded(e),e.src=e.getAttribute("data-src")}))}onAssetLoaded(e){this.length+=1;const t=this.length/this.elements.images.length;this.elements.number.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.animateOut=a.default.timeline({delay:2}),this.animateOut.to(this.element,{autoAlpha:0}),this.animateOut.call((e=>{this.emit("completed")}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}},"./app/utils/text.js":(e,t,s)=>{s.r(t),s.d(t,{calculate:()=>a,split:()=>o});var n=s("./node_modules/lodash/each.js");function o({element:e,expression:t=" ",append:s=!0}){const o=splitText(e.innertHTML.toString().trim(),t);let a="";n(o,(e=>{if(e.indexOf("<br>")>-1){const t=e.split("<br>");n(t,((e,t)=>{a+=t>0?"<br>"+parseLine(e):parseLine(e)}))}else a+=parseLine(e)})),e.innerHTML=a;const i=e.querySelectorAll("span");return s&&n(i,(e=>{const t=1===e.textContent.length,s=""!==e.innerHTML.trim(),n="&"!==e.textContent,o="-"!==e.textContent;t&&s&&n&&o&&(e.innerHTML=`${e.textContent}&nbsp`)})),i}function a(e){const t=[];let s=[],o=e[0].offsetTop;n(e,((n,a)=>{n.offsetTop===o&&s.push(n),n.offsetTop!==o&&(t.push(s),s=[],s.push(n),o=n.offsetTop),e.length}))}}},(function(e){e.h=()=>"f1edd694cca9cf48662a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi40MGExMzMzZGMzZjhlZDEzNTIwZS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NFFBS2UsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3JDQyxjQUNFQyxNQUFNLENBQ0pDLFFBQVMsYUFDVEMsU0FBVSxDQUNSQyxNQUFPLG1CQUNQQyxPQUFRLDJCQUNSQyxPQUFRQyxTQUFTQyxpQkFBaUIsVUFJdENDLEtBQUtDLE9BQVMsRUFFZEQsS0FBS0UsY0FDTixDQUVEQSxlQUNFQyxFQUFLSCxLQUFLTixTQUFTRyxRQUFTSixJQUMxQkEsRUFBUVcsT0FBVUMsR0FBTUwsS0FBS00sY0FBY2IsR0FDM0NBLEVBQVFjLElBQU1kLEVBQVFlLGFBQWEsV0FBbkMsR0FFSCxDQUVERixjQUFjRyxHQUNaVCxLQUFLQyxRQUFVLEVBRWYsTUFBTVMsRUFBVVYsS0FBS0MsT0FBU0QsS0FBS04sU0FBU0csT0FBT0ksT0FDbkRELEtBQUtOLFNBQVNFLE9BQU9lLFVBQWEsR0FBRUMsS0FBS0MsTUFBZ0IsSUFBVkgsTUFFL0IsSUFBWkEsR0FDRlYsS0FBS2MsVUFFUixDQUVEQSxXQUNFLE9BQU8sSUFBSUMsU0FBU0MsSUFDbEJoQixLQUFLaUIsV0FBYUMsRUFBQUEsUUFBQUEsU0FBYyxDQUM5QkMsTUFBTyxJQUdUbkIsS0FBS2lCLFdBQVdHLEdBQUdwQixLQUFLUCxRQUFTLENBQy9CNEIsVUFBVyxJQUdickIsS0FBS2lCLFdBQVdLLE1BQU1qQixJQUNwQkwsS0FBS3VCLEtBQUssWUFBVixHQURGLEdBSUgsQ0FFREMsVUFDRXhCLEtBQUtQLFFBQVFnQyxXQUFXQyxZQUFZMUIsS0FBS1AsUUFDMUMseUhDdkRJLFNBQVNrQyxHQUFNLFFBQUVsQyxFQUFGLFdBQVdtQyxFQUFhLElBQXhCLE9BQTZCQyxHQUFTLElBQzFELE1BQU1DLEVBQVFDLFVBQVV0QyxFQUFRdUMsV0FBV0MsV0FBV0MsT0FBUU4sR0FFOUQsSUFBSWpCLEVBQVksR0FFaEJSLEVBQUsyQixHQUFRSyxJQUNYLEdBQUlBLEVBQUtDLFFBQVEsU0FBVyxFQUFHLENBQzdCLE1BQU1DLEVBQVFGLEVBQUtSLE1BQU0sUUFFekJ4QixFQUFLa0MsR0FBTyxDQUFDRixFQUFNRyxLQUNqQjNCLEdBQWEyQixFQUFRLEVBQUksT0FBU0MsVUFBVUosR0FBUUksVUFBVUosRUFBOUQsR0FFSCxNQUNDeEIsR0FBYTRCLFVBQVVKLEVBQ3hCLElBR0gxQyxFQUFRa0IsVUFBWUEsRUFFcEIsTUFBTTZCLEVBQVEvQyxFQUFRTSxpQkFBaUIsUUFtQnZDLE9BakJJOEIsR0FDRjFCLEVBQUtxQyxHQUFRQyxJQUNYLE1BQU1DLEVBQTZDLElBQTVCRCxFQUFLRSxZQUFZMUMsT0FDbEMyQyxFQUF1QyxLQUExQkgsRUFBSzlCLFVBQVV1QixPQUM1QlcsRUFBeUMsTUFBckJKLEVBQUtFLFlBQ3pCRyxFQUEwQyxNQUFyQkwsRUFBS0UsWUFHOUJELEdBQ0FFLEdBQ0FDLEdBQ0FDLElBRUFMLEVBQUs5QixVQUFhLEdBQUU4QixFQUFLRSxtQkFDMUIsSUFHRUgsQ0FDUixDQUVNLFNBQVNPLEVBQVVQLEdBQ3hCLE1BQU1ILEVBQVEsR0FDZCxJQUFJUCxFQUFRLEdBRVJrQixFQUFXUixFQUFNLEdBQUdTLFVBRXhCOUMsRUFBS3FDLEdBQU8sQ0FBQ0MsRUFBTUgsS0FDYkcsRUFBS1EsWUFBY0QsR0FDckJsQixFQUFNb0IsS0FBS1QsR0FHVEEsRUFBS1EsWUFBY0QsSUFDckJYLEVBQU1hLEtBQUtwQixHQUVYQSxFQUFRLEdBQ1JBLEVBQU1vQixLQUFLVCxHQUVYTyxFQUFXUCxFQUFLUSxXQUdEVCxFQUFNdkMsTUFFdEIsR0FJSixpQkNyRURrRCxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvLi9hcHAvY29tcG9uZW50cy9QcmVsb2FkZXIuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvLi9hcHAvdXRpbHMvdGV4dC5qcyIsIndlYnBhY2s6Ly9pbW1lcnNpdmUtd2Vic2l0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbXBvbmVudCBmcm9tIFwiY2xhc3Nlcy9Db21wb25lbnRcIjtcbmltcG9ydCBlYWNoIGZyb20gXCJsb2Rhc2gvZWFjaFwiO1xuaW1wb3J0IEdTQVAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IHNwbGl0IH0gZnJvbSBcInV0aWxzL3RleHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJlbG9hZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoe1xuICAgICAgZWxlbWVudDogXCIucHJlbG9hZGVyXCIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICB0aXRsZTogXCIucHJlbG9hZGVyX190ZXh0XCIsXG4gICAgICAgIG51bWJlcjogXCIucHJlbG9hZGVyX19udW1iZXJfX3RleHRcIixcbiAgICAgICAgaW1hZ2VzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW1nXCIpLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHRoaXMubGVuZ3RoID0gMDtcblxuICAgIHRoaXMuY3JlYXRlTG9hZGVyKCk7XG4gIH1cblxuICBjcmVhdGVMb2FkZXIoKSB7XG4gICAgZWFjaCh0aGlzLmVsZW1lbnRzLmltYWdlcywgKGVsZW1lbnQpID0+IHtcbiAgICAgIGVsZW1lbnQub25sb2FkID0gKF8pID0+IHRoaXMub25Bc3NldExvYWRlZChlbGVtZW50KTtcbiAgICAgIGVsZW1lbnQuc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uQXNzZXRMb2FkZWQoaW1hZ2UpIHtcbiAgICB0aGlzLmxlbmd0aCArPSAxO1xuXG4gICAgY29uc3QgcGVyY2VudCA9IHRoaXMubGVuZ3RoIC8gdGhpcy5lbGVtZW50cy5pbWFnZXMubGVuZ3RoO1xuICAgIHRoaXMuZWxlbWVudHMubnVtYmVyLmlubmVySFRNTCA9IGAke01hdGgucm91bmQocGVyY2VudCAqIDEwMCl9JWA7XG5cbiAgICBpZiAocGVyY2VudCA9PT0gMSkge1xuICAgICAgdGhpcy5vbkxvYWRlZCgpO1xuICAgIH1cbiAgfVxuXG4gIG9uTG9hZGVkKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgdGhpcy5hbmltYXRlT3V0ID0gR1NBUC50aW1lbGluZSh7XG4gICAgICAgIGRlbGF5OiAyLFxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC50byh0aGlzLmVsZW1lbnQsIHtcbiAgICAgICAgYXV0b0FscGhhOiAwLFxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC5jYWxsKChfKSA9PiB7XG4gICAgICAgIHRoaXMuZW1pdChcImNvbXBsZXRlZFwiKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICB9XG59XG4iLCJpbXBvcnQgZWFjaCBmcm9tIFwibG9kYXNoL2VhY2hcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0KHsgZWxlbWVudCwgZXhwcmVzc2lvbiA9IFwiIFwiLCBhcHBlbmQgPSB0cnVlIH0pIHtcbiAgY29uc3Qgd29yZHMgPSBzcGxpdFRleHQoZWxlbWVudC5pbm5lcnRIVE1MLnRvU3RyaW5nKCkudHJpbSgpLCBleHByZXNzaW9uKTtcblxuICBsZXQgaW5uZXJIVE1MID0gXCJcIjtcblxuICBlYWNoKHdvcmRzLCAobGluZSkgPT4ge1xuICAgIGlmIChsaW5lLmluZGV4T2YoXCI8YnI+XCIpID4gLTEpIHtcbiAgICAgIGNvbnN0IGxpbmVzID0gbGluZS5zcGxpdChcIjxicj5cIik7XG5cbiAgICAgIGVhY2gobGluZXMsIChsaW5lLCBpbmRleCkgPT4ge1xuICAgICAgICBpbm5lckhUTUwgKz0gaW5kZXggPiAwID8gXCI8YnI+XCIgKyBwYXJzZUxpbmUobGluZSkgOiBwYXJzZUxpbmUobGluZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5uZXJIVE1MICs9IHBhcnNlTGluZShsaW5lKTtcbiAgICB9XG4gIH0pO1xuXG4gIGVsZW1lbnQuaW5uZXJIVE1MID0gaW5uZXJIVE1MO1xuXG4gIGNvbnN0IHNwYW5zID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwic3BhblwiKTtcblxuICBpZiAoYXBwZW5kKSB7XG4gICAgZWFjaChzcGFucywgKHNwYW4pID0+IHtcbiAgICAgIGNvbnN0IGlzU2luZ2xlTGV0dGVyID0gc3Bhbi50ZXh0Q29udGVudC5sZW5ndGggPT09IDE7XG4gICAgICBjb25zdCBpc05vdEVtcHR5ID0gc3Bhbi5pbm5lckhUTUwudHJpbSgpICE9PSBcIlwiO1xuICAgICAgY29uc3QgaXNOb3RBbmRDaGFyYWN0ZXIgPSBzcGFuLnRleHRDb250ZW50ICE9PSBcIiZcIjtcbiAgICAgIGNvbnN0IGlzTm90RGFzaENoYXJhY3RlciA9IHNwYW4udGV4dENvbnRlbnQgIT09IFwiLVwiO1xuXG4gICAgICBpZiAoXG4gICAgICAgIGlzU2luZ2xlTGV0dGVyICYmXG4gICAgICAgIGlzTm90RW1wdHkgJiZcbiAgICAgICAgaXNOb3RBbmRDaGFyYWN0ZXIgJiZcbiAgICAgICAgaXNOb3REYXNoQ2hhcmFjdGVyXG4gICAgICApIHtcbiAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSBgJHtzcGFuLnRleHRDb250ZW50fSZuYnNwYDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gc3BhbnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGUoc3BhbnMpIHtcbiAgY29uc3QgbGluZXMgPSBbXTtcbiAgbGV0IHdvcmRzID0gW107XG5cbiAgbGV0IHBvc2l0aW9uID0gc3BhbnNbMF0ub2Zmc2V0VG9wO1xuXG4gIGVhY2goc3BhbnMsIChzcGFuLCBpbmRleCkgPT4ge1xuICAgIGlmIChzcGFuLm9mZnNldFRvcCA9PT0gcG9zaXRpb24pIHtcbiAgICAgIHdvcmRzLnB1c2goc3Bhbik7XG4gICAgfVxuXG4gICAgaWYgKHNwYW4ub2Zmc2V0VG9wICE9PSBwb3NpdGlvbikge1xuICAgICAgbGluZXMucHVzaCh3b3Jkcyk7XG5cbiAgICAgIHdvcmRzID0gW107XG4gICAgICB3b3Jkcy5wdXNoKHNwYW4pO1xuXG4gICAgICBwb3NpdGlvbiA9IHNwYW4ub2Zmc2V0VG9wO1xuICAgIH1cblxuICAgIGlmKGluZGV4ICsgMSA9PT0gc3BhbnMubGVuZ3RoKSB7XG4gICAgICBcbiAgICB9XG5cblxuICB9KTtcbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImYxZWRkNjk0Y2NhOWNmNDg2NjJhXCIpIl0sIm5hbWVzIjpbIlByZWxvYWRlciIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwic3VwZXIiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJ0aXRsZSIsIm51bWJlciIsImltYWdlcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInRoaXMiLCJsZW5ndGgiLCJjcmVhdGVMb2FkZXIiLCJlYWNoIiwib25sb2FkIiwiXyIsIm9uQXNzZXRMb2FkZWQiLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJpbWFnZSIsInBlcmNlbnQiLCJpbm5lckhUTUwiLCJNYXRoIiwicm91bmQiLCJvbkxvYWRlZCIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0ZU91dCIsIkdTQVAiLCJkZWxheSIsInRvIiwiYXV0b0FscGhhIiwiY2FsbCIsImVtaXQiLCJkZXN0cm95IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwic3BsaXQiLCJleHByZXNzaW9uIiwiYXBwZW5kIiwid29yZHMiLCJzcGxpdFRleHQiLCJpbm5lcnRIVE1MIiwidG9TdHJpbmciLCJ0cmltIiwibGluZSIsImluZGV4T2YiLCJsaW5lcyIsImluZGV4IiwicGFyc2VMaW5lIiwic3BhbnMiLCJzcGFuIiwiaXNTaW5nbGVMZXR0ZXIiLCJ0ZXh0Q29udGVudCIsImlzTm90RW1wdHkiLCJpc05vdEFuZENoYXJhY3RlciIsImlzTm90RGFzaENoYXJhY3RlciIsImNhbGN1bGF0ZSIsInBvc2l0aW9uIiwib2Zmc2V0VG9wIiwicHVzaCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==