/*! For license information please see main.edb73e6efa26cb691e7c.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Collections/Media.js":(t,e,i)=>{i.r(e),i.d(e,{default:()=>o});var s=i("./node_modules/gsap/index.js"),h=i("./node_modules/ogl/src/core/Program.js"),r=i("./node_modules/ogl/src/core/Mesh.js");Object(function(){var t=new Error("Cannot find module 'shaders/collections-fragment.glsl'");throw t.code="MODULE_NOT_FOUND",t}()),Object(function(){var t=new Error("Cannot find module 'shaders/collections-vertex.glsl'");throw t.code="MODULE_NOT_FOUND",t}());const o=class{constructor({element:t,geometry:e,gl:i,index:s,scene:h,sizes:r}){this.element=t,this.geometry=e,this.gl=i,this.index=s,this.scene=h,this.sizes=r,this.extra={x:0,y:0},this.opacity={current:0,target:0,lerp:.1,multiplier:0},this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this.sizes})}createTexture(){const t=this.element.querySelector(".collections__gallery__media__image");this.texture=window.TEXTURES[t.getAttribute("data-src")]}createProgram(){this.program=new h.Program(this.gl,{fragment:Object(function(){var t=new Error("Cannot find module 'shaders/collections-fragment.glsl'");throw t.code="MODULE_NOT_FOUND",t}()),vertex:Object(function(){var t=new Error("Cannot find module 'shaders/collections-vertex.glsl'");throw t.code="MODULE_NOT_FOUND",t}()),uniforms:{uAlpha:{value:0},tMap:{value:this.texture}}})}createMesh(){this.mesh=new r.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:t}){this.sizes=t,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX()}show(){s.default.fromTo(this.opacity,{multiplier:0},{multiplier:1})}hide(){s.default.to(this.opacity,{multiplier:0})}onResize(t,e){this.extra={x:0,y:0},this.createBounds(t),this.updateX(e&&e.x)}updateScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(t=0){this.x=(this.bounds.left+t)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}update(t,e){this.updateX(t);this.mesh.rotation.z=-.02*Math.PI*Math.sin(this.index/1),this.mesh.position.y=.1*Math.sin(this.index/1),this.opacity.target=e===this.index?1:.4,this.opacity.current=s.default.utils.interpolate(this.opacity.current,this.opacity.target,this.opacity.lerp),this.program.uniforms.uAlpha.value=this.opacity.multiplier,this.program.uniforms.uAlpha.value=this.opacity.multiplier*this.opacity.current}}}},(function(t){t.h=()=>"cd37fcc3d4b46764a154"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxLQUFLSCxNQUgvQixHQUtsQkcsS0FBS0ksUUFBUUUsT0FBU1QsSUFBVUcsS0FBS0gsTUFBUSxFQUFJLEdBQ2pERyxLQUFLSSxRQUFRQyxRQUFVOEIsRUFBQUEsUUFBQUEsTUFBQUEsWUFDckJuQyxLQUFLSSxRQUFRQyxRQUNiTCxLQUFLSSxRQUFRRSxPQUNiTixLQUFLSSxRQUFRRyxNQUdmUCxLQUFLbUIsUUFBUUksU0FBU0MsT0FBT0MsTUFBUXpCLEtBQUtJLFFBQVFJLFdBQ2xEUixLQUFLbUIsUUFBUUksU0FBU0MsT0FBT0MsTUFBUXpCLEtBQUtJLFFBQVFJLFdBQWFSLEtBQUtJLFFBQVFDLE9BQzdFLGtCQy9JSCtDLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvQ29sbGVjdGlvbnMvTWVkaWEuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR1NBUCBmcm9tICdnc2FwJztcbmltcG9ydCB7IE1lc2gsIFByb2dyYW0gfSBmcm9tICdvZ2wnO1xuXG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnc2hhZGVycy9jb2xsZWN0aW9ucy1mcmFnbWVudC5nbHNsJztcbmltcG9ydCB2ZXJ0ZXggZnJvbSAnc2hhZGVycy9jb2xsZWN0aW9ucy12ZXJ0ZXguZ2xzbCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBnZW9tZXRyeSwgZ2wsIGluZGV4LCBzY2VuZSwgc2l6ZXMgfSkge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgdGhpcy5nZW9tZXRyeSA9IGdlb21ldHJ5O1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcblxuICAgIHRoaXMuZXh0cmEgPSB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMCxcbiAgICB9O1xuXG4gICAgdGhpcy5vcGFjaXR5ID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIGxlcnA6IDAuMSxcbiAgICAgIG11bHRpcGxpZXI6IDAsXG4gICAgfTtcblxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuY3JlYXRlUHJvZ3JhbSgpO1xuICAgIHRoaXMuY3JlYXRlTWVzaCgpO1xuICAgIHRoaXMuY3JlYXRlQm91bmRzKHtcbiAgICAgIHNpemVzOiB0aGlzLnNpemVzLFxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlVGV4dHVyZSgpIHtcbiAgICBjb25zdCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCAnLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19tZWRpYV9faW1hZ2UnICk7IC8vIHByZXR0aWVyLWlnbm9yZVxuXG4gICAgdGhpcy50ZXh0dXJlID0gd2luZG93LlRFWFRVUkVTW2ltYWdlLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKV07XG4gIH1cblxuICBjcmVhdGVQcm9ncmFtKCkge1xuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIGZyYWdtZW50LFxuICAgICAgdmVydGV4LFxuICAgICAgdW5pZm9ybXM6IHtcbiAgICAgICAgdUFscGhhOiB7IHZhbHVlOiAwIH0sXG4gICAgICAgIHRNYXA6IHsgdmFsdWU6IHRoaXMudGV4dHVyZSB9LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuXG4gIGNyZWF0ZU1lc2goKSB7XG4gICAgdGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXG4gICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW0sXG4gICAgfSk7XG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICB9XG5cbiAgY3JlYXRlQm91bmRzKHsgc2l6ZXMgfSkge1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcblxuICAgIHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgdGhpcy51cGRhdGVTY2FsZSgpO1xuICAgIHRoaXMudXBkYXRlWCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFuaW1hdGlvbnMuXG4gICAqL1xuICBzaG93KCkge1xuICAgIEdTQVAuZnJvbVRvKFxuICAgICAgdGhpcy5vcGFjaXR5LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsaWVyOiAwLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGllcjogMSxcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgaGlkZSgpIHtcbiAgICBHU0FQLnRvKHRoaXMub3BhY2l0eSwge1xuICAgICAgbXVsdGlwbGllcjogMCxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmVudHMuXG4gICAqL1xuICBvblJlc2l6ZShzaXplcywgc2Nyb2xsKSB7XG4gICAgdGhpcy5leHRyYSA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgIH07XG5cbiAgICB0aGlzLmNyZWF0ZUJvdW5kcyhzaXplcyk7XG4gICAgdGhpcy51cGRhdGVYKHNjcm9sbCAmJiBzY3JvbGwueCk7XG4gIH1cblxuICAvKipcbiAgICogTG9vcC5cbiAgICovXG4gIHVwZGF0ZVNjYWxlKCkge1xuICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5ib3VuZHMuaGVpZ2h0IC8gd2luZG93LmlubmVySGVpZ2h0O1xuICAgIHRoaXMud2lkdGggPSB0aGlzLmJvdW5kcy53aWR0aCAvIHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgdGhpcy5tZXNoLnNjYWxlLnggPSB0aGlzLnNpemVzLndpZHRoICogdGhpcy53aWR0aDtcbiAgICB0aGlzLm1lc2guc2NhbGUueSA9IHRoaXMuc2l6ZXMuaGVpZ2h0ICogdGhpcy5oZWlnaHQ7XG4gIH1cblxuICB1cGRhdGVYKHggPSAwKSB7XG4gICAgdGhpcy54ID0gKHRoaXMuYm91bmRzLmxlZnQgKyB4KSAvIHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPVxuICAgICAgLXRoaXMuc2l6ZXMud2lkdGggLyAyICtcbiAgICAgIHRoaXMubWVzaC5zY2FsZS54IC8gMiArXG4gICAgICB0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoICtcbiAgICAgIHRoaXMuZXh0cmEueDtcbiAgfVxuXG4gIHVwZGF0ZShzY3JvbGwsIGluZGV4KSB7XG4gICAgdGhpcy51cGRhdGVYKHNjcm9sbCk7XG5cbiAgICBjb25zdCBhbXBsaXR1ZGUgPSAwLjE7XG4gICAgY29uc3QgZnJlcXVlbmN5ID0gMTtcblxuICAgIHRoaXMubWVzaC5yb3RhdGlvbi56ID0gLTAuMDIgKiBNYXRoLlBJICogTWF0aC5zaW4odGhpcy5pbmRleCAvIGZyZXF1ZW5jeSk7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSBhbXBsaXR1ZGUgKiBNYXRoLnNpbih0aGlzLmluZGV4IC8gZnJlcXVlbmN5KTtcblxuICAgIHRoaXMub3BhY2l0eS50YXJnZXQgPSBpbmRleCA9PT0gdGhpcy5pbmRleCA/IDEgOiAwLjQ7XG4gICAgdGhpcy5vcGFjaXR5LmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKFxuICAgICAgdGhpcy5vcGFjaXR5LmN1cnJlbnQsXG4gICAgICB0aGlzLm9wYWNpdHkudGFyZ2V0LFxuICAgICAgdGhpcy5vcGFjaXR5LmxlcnBcbiAgICApO1xuXG4gICAgdGhpcy5wcm9ncmFtLnVuaWZvcm1zLnVBbHBoYS52YWx1ZSA9IHRoaXMub3BhY2l0eS5tdWx0aXBsaWVyO1xuICAgIHRoaXMucHJvZ3JhbS51bmlmb3Jtcy51QWxwaGEudmFsdWUgPSB0aGlzLm9wYWNpdHkubXVsdGlwbGllciAqIHRoaXMub3BhY2l0eS5jdXJyZW50OyAvLyBwcmV0dGllci1pZ25vcmVcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiY2QzN2ZjYzNkNGI0Njc2NGExNTRcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZ2VvbWV0cnkiLCJnbCIsImluZGV4Iiwic2NlbmUiLCJzaXplcyIsInRoaXMiLCJleHRyYSIsIngiLCJ5Iiwib3BhY2l0eSIsImN1cnJlbnQiLCJ0YXJnZXQiLCJsZXJwIiwibXVsdGlwbGllciIsImNyZWF0ZVRleHR1cmUiLCJjcmVhdGVQcm9ncmFtIiwiY3JlYXRlTWVzaCIsImNyZWF0ZUJvdW5kcyIsImltYWdlIiwicXVlcnlTZWxlY3RvciIsInRleHR1cmUiLCJ3aW5kb3ciLCJURVhUVVJFUyIsImdldEF0dHJpYnV0ZSIsInByb2dyYW0iLCJQcm9ncmFtIiwiZnJhZ21lbnQiLCJ2ZXJ0ZXgiLCJ1bmlmb3JtcyIsInVBbHBoYSIsInZhbHVlIiwidE1hcCIsIm1lc2giLCJNZXNoIiwic2V0UGFyZW50IiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidXBkYXRlU2NhbGUiLCJ1cGRhdGVYIiwic2hvdyIsIkdTQVAiLCJoaWRlIiwib25SZXNpemUiLCJzY3JvbGwiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsIndpZHRoIiwiaW5uZXJXaWR0aCIsInNjYWxlIiwibGVmdCIsInBvc2l0aW9uIiwidXBkYXRlIiwicm90YXRpb24iLCJ6IiwiTWF0aCIsIlBJIiwic2luIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9