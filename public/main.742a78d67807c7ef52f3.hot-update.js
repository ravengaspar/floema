/*! For license information please see main.742a78d67807c7ef52f3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>c});var o=t("./node_modules/gsap/index.js"),i=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),n=t("./node_modules/ogl/src/core/Mesh.js"),r=t("./app/shaders/plane-fragment.glsl"),l=t("./app/shaders/plane-vertex.glsl"),h=t("./node_modules/console-browserify/index.js");const c=class{constructor({collections:e,gl:s,scene:t,sizes:o,url:a}){this.collections=e,this.gl=s,this.scene=t,this.sizes=o,this.url=a,this.geometry=new i.Plane(this.gl)}createTexture(){const{index:e}=this.collections}createProgram(e){this.program=new a.Program(this.gl,{fragment:r.default,vertex:l.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new n.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=e.position.z+.01,this.mesh.rotation.x=e.rotation.x,this.mesh.rotation.y=e.rotation.y,this.mesh.rotation.z=e.rotation.z,this.mesh.setParent(this.scene)}setElement(e){if(h.log(e.id),"collections"===e.id){const{index:s,medias:t}=e,o=t[s];this.createProgram(o.texture),this.createMesh(o.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e.mesh),this.transition="collections"}animate(e,s){const t=o.default.timeline({});t.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.scale.x,y:e.scale.y,z:e.scale.z},0),t.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",x:e.position.x,y:e.position.y,z:e.position.z},0),t.to(this.mesh.rotation,{duration:1.5,ease:"expo.inOut",x:e.rotation.x,y:e.rotation.y,z:e.rotation.z},0),t.call((e=>{s()})),t.call((e=>{this.scene.removeChild(this.mesh)}),null,"+=0.2")}}}},(function(e){e.h=()=>"ef64f61a88b7dbed0133"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNiUCxHQUFZLElBR2JDLEVBQVNLLE1BQU1DLElBQ2J6QyxLQUFLSCxNQUFNNkMsWUFBWTFDLEtBQUtnQixLQUE1QixHQUNDLEtBQU0sUUFDVCxrQkM1SEYyQixFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL1RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xuaW1wb3J0IHsgTWVzaCwgUGxhbmUsIFByb2dyYW0gfSBmcm9tICdvZ2wnXG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnXG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHtcblx0Y29uc3RydWN0b3IoeyBjb2xsZWN0aW9ucywgZ2wsIHNjZW5lLCBzaXplcywgdXJsIH0pIHtcblx0XHR0aGlzLmNvbGxlY3Rpb25zID0gY29sbGVjdGlvbnNcblx0XHR0aGlzLmdsID0gZ2xcblx0XHR0aGlzLnNjZW5lID0gc2NlbmVcblx0XHR0aGlzLnNpemVzID0gc2l6ZXNcblx0XHR0aGlzLnVybCA9IHVybFxuXG5cdFx0dGhpcy5nZW9tZXRyeSA9IG5ldyBQbGFuZSh0aGlzLmdsKVxuXHR9XG5cblx0Y3JlYXRlVGV4dHVyZSgpIHtcblx0XHRjb25zdCB7IGluZGV4IH0gPSB0aGlzLmNvbGxlY3Rpb25zXG5cdH1cblxuXHRjcmVhdGVQcm9ncmFtKHRleHR1cmUpIHtcblx0XHR0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG5cdFx0XHRmcmFnbWVudCxcblx0XHRcdHZlcnRleCxcblx0XHRcdHVuaWZvcm1zOiB7XG5cdFx0XHRcdHVBbHBoYTogeyB2YWx1ZTogMSB9LFxuXHRcdFx0XHR0TWFwOiB7IHZhbHVlOiB0ZXh0dXJlIH0sXG5cdFx0XHR9LFxuXHRcdH0pXG5cdH1cblxuXHRjcmVhdGVNZXNoKG1lc2gpIHtcblx0XHR0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG5cdFx0XHRnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcblx0XHRcdHByb2dyYW06IHRoaXMucHJvZ3JhbSxcblx0XHR9KVxuXG5cdFx0dGhpcy5tZXNoLnNjYWxlLnggPSBtZXNoLnNjYWxlLnhcblx0XHR0aGlzLm1lc2guc2NhbGUueSA9IG1lc2guc2NhbGUueVxuXHRcdHRoaXMubWVzaC5zY2FsZS56ID0gbWVzaC5zY2FsZS56XG5cblx0XHR0aGlzLm1lc2gucG9zaXRpb24ueCA9IG1lc2gucG9zaXRpb24ueFxuXHRcdHRoaXMubWVzaC5wb3NpdGlvbi55ID0gbWVzaC5wb3NpdGlvbi55XG5cdFx0dGhpcy5tZXNoLnBvc2l0aW9uLnogPSBtZXNoLnBvc2l0aW9uLnogKyAwLjAxXG5cblx0XHR0aGlzLm1lc2gucm90YXRpb24ueCA9IG1lc2gucm90YXRpb24ueFxuXHRcdHRoaXMubWVzaC5yb3RhdGlvbi55ID0gbWVzaC5yb3RhdGlvbi55XG5cdFx0dGhpcy5tZXNoLnJvdGF0aW9uLnogPSBtZXNoLnJvdGF0aW9uLnpcblxuXHRcdHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcblx0fVxuXG5cdC8qKlxuXHQgKiBFbGVtZW50XG5cdCAqL1xuXHRzZXRFbGVtZW50KGVsZW1lbnQpIHtcblx0XHRjb25zb2xlLmxvZyhlbGVtZW50LmlkKVxuXG5cdFx0aWYgKGVsZW1lbnQuaWQgPT09ICdjb2xsZWN0aW9ucycpIHtcblx0XHRcdGNvbnN0IHsgaW5kZXgsIG1lZGlhcyB9ID0gZWxlbWVudFxuXHRcdFx0Y29uc3QgbWVkaWEgPSBtZWRpYXNbaW5kZXhdXG5cblx0XHRcdHRoaXMuY3JlYXRlUHJvZ3JhbShtZWRpYS50ZXh0dXJlKVxuXHRcdFx0dGhpcy5jcmVhdGVNZXNoKG1lZGlhLm1lc2gpXG5cblx0XHRcdHRoaXMudHJhbnNpdGlvbiA9ICdkZXRhaWwnXG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuY3JlYXRlUHJvZ3JhbShlbGVtZW50LnRleHR1cmUpXG5cdFx0XHR0aGlzLmNyZWF0ZU1lc2goZWxlbWVudC5tZXNoKVxuXG5cdFx0XHR0aGlzLnRyYW5zaXRpb24gPSAnY29sbGVjdGlvbnMnXG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIEFuaW1hdGlvbnMuXG5cdCAqL1xuXHRhbmltYXRlKGVsZW1lbnQsIG9uQ29tcGxldGUpIHtcblx0XHRjb25zdCB0aW1lbGluZSA9IEdTQVAudGltZWxpbmUoe30pXG5cblx0XHR0aW1lbGluZS50byhcblx0XHRcdHRoaXMubWVzaC5zY2FsZSxcblx0XHRcdHtcblx0XHRcdFx0ZHVyYXRpb246IDEuNSxcblx0XHRcdFx0ZWFzZTogJ2V4cG8uaW5PdXQnLFxuXHRcdFx0XHR4OiBlbGVtZW50LnNjYWxlLngsXG5cdFx0XHRcdHk6IGVsZW1lbnQuc2NhbGUueSxcblx0XHRcdFx0ejogZWxlbWVudC5zY2FsZS56LFxuXHRcdFx0fSxcblx0XHRcdDBcblx0XHQpXG5cblx0XHR0aW1lbGluZS50byhcblx0XHRcdHRoaXMubWVzaC5wb3NpdGlvbixcblx0XHRcdHtcblx0XHRcdFx0ZHVyYXRpb246IDEuNSxcblx0XHRcdFx0ZWFzZTogJ2V4cG8uaW5PdXQnLFxuXHRcdFx0XHR4OiBlbGVtZW50LnBvc2l0aW9uLngsXG5cdFx0XHRcdHk6IGVsZW1lbnQucG9zaXRpb24ueSxcblx0XHRcdFx0ejogZWxlbWVudC5wb3NpdGlvbi56LFxuXHRcdFx0fSxcblx0XHRcdDBcblx0XHQpXG5cblx0XHR0aW1lbGluZS50byhcblx0XHRcdHRoaXMubWVzaC5yb3RhdGlvbixcblx0XHRcdHtcblx0XHRcdFx0ZHVyYXRpb246IDEuNSxcblx0XHRcdFx0ZWFzZTogJ2V4cG8uaW5PdXQnLFxuXHRcdFx0XHR4OiBlbGVtZW50LnJvdGF0aW9uLngsXG5cdFx0XHRcdHk6IGVsZW1lbnQucm90YXRpb24ueSxcblx0XHRcdFx0ejogZWxlbWVudC5yb3RhdGlvbi56LFxuXHRcdFx0fSxcblx0XHRcdDBcblx0XHQpXG5cblx0XHR0aW1lbGluZS5jYWxsKF8gPT4ge1xuXHRcdFx0b25Db21wbGV0ZSgpXG5cdFx0fSlcblxuXHRcdHRpbWVsaW5lLmNhbGwoKF8pID0+IHtcbiAgICB0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMubWVzaCk7XG4gIH0sIG51bGwsICcrPTAuMicpOyAvLyBwcmV0dGllci1pZ25vcmVcblx0fVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiZWY2NGY2MWE4OGI3ZGJlZDAxMzNcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJjb2xsZWN0aW9ucyIsImdsIiwic2NlbmUiLCJzaXplcyIsInVybCIsInRoaXMiLCJnZW9tZXRyeSIsIlBsYW5lIiwiY3JlYXRlVGV4dHVyZSIsImluZGV4IiwiY3JlYXRlUHJvZ3JhbSIsInRleHR1cmUiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ1QWxwaGEiLCJ2YWx1ZSIsInRNYXAiLCJjcmVhdGVNZXNoIiwibWVzaCIsIk1lc2giLCJzY2FsZSIsIngiLCJ5IiwieiIsInBvc2l0aW9uIiwicm90YXRpb24iLCJzZXRQYXJlbnQiLCJzZXRFbGVtZW50IiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsIm1lZGlhcyIsIm1lZGlhIiwidHJhbnNpdGlvbiIsImFuaW1hdGUiLCJvbkNvbXBsZXRlIiwidGltZWxpbmUiLCJHU0FQIiwidG8iLCJkdXJhdGlvbiIsImVhc2UiLCJjYWxsIiwiXyIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9