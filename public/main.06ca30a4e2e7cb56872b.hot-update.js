/*! For license information please see main.06ca30a4e2e7cb56872b.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Collections/Media.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>n});var i=s("./node_modules/ogl/src/core/Program.js"),l=s("./node_modules/ogl/src/core/Mesh.js"),r=s("./node_modules/gsap/index.js"),o=s("./app/shaders/plane-fragment.glsl"),h=s("./app/shaders/plane-vertex.glsl");const n=class{constructor({element:t,geometry:e,gl:s,index:i,scene:l,sizes:r}){this.element=t,this.geometry=e,this.gl=s,this.scene=l,this.index=i,this.sizes=r,this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){const t=this.element.querySelector(".collections__gallery__media__image");this.texture=window.TEXTURES[t.getAttribute("data-src")]}createProgram(){this.program=new i.Program(this.gl,{fragment:o.default,vertex:h.default,uniforms:{uAlpha:{value:0},tMap:{value:this.texture}}})}createMesh(){this.mesh=new l.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:t}){this.sizes=t,this.bounds=this.element.getBoundingClientRect(),this.updateScale(t),this.updateX(),this.updateY()}show(){r.default.fromTo(this.program.uniforms.uAlpha,{value:0},{value:1})}hide(){r.default.to(this.program.uniforms.uAlpha,{value:0})}onResize(t,e){this.createBounds(t),this.extra={x:0,y:0},this.updateX(e?e.x:0),this.updateY(e?e.y:0)}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(t=0){this.x=(this.bounds.left+t)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(t=0){this.y=(this.bounds.top+t)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}update(t){this.bounds&&(this.updateX(t),this.updateY())}}},"./app/components/Canvas/Collections/index.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>a});var i=s("./node_modules/ogl/src/core/Transform.js"),l=s("./node_modules/ogl/src/extras/Plane.js"),r=s("./node_modules/gsap/index.js"),o=s("./node_modules/prefix/index.js"),h=s("./node_modules/lodash/map.js"),n=s("./app/components/Canvas/Collections/Media.js");const a=class{constructor({gl:t,scene:e,sizes:s,transition:l}){this.gl=t,this.sizes=s,this.scene=e,this.transition=l,this.transfromPrefix=o("transform"),this.group=new i.Transform,this.galleryElement=document.querySelector(".collections__gallery"),this.galleryWrapperElement=document.querySelector(".collections__gallery__wrapper"),this.titlesElement=document.querySelector(".collections__titles"),this.collectionsElements=document.querySelectorAll(".collections__article"),this.collectionsElementsActive="collections__article--active",this.mediasElements=document.querySelectorAll(".collections__gallery__media"),this.scroll={current:0,start:0,target:0,lerp:.1,velocity:1},this.createGeometry(),this.createGallery(),this.onResize({sizes:this.sizes}),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new l.Plane(this.gl)}createGallery(){this.medias=h(this.mediasElements,((t,e)=>new n.default({element:t,geometry:this.geometry,index:e,gl:this.gl,scene:this.group,sizes:this.sizes})))}async show(){if(this.transition){const{src:t}=this.transition.mesh.program.uniforms.tMap.value.image,e=window.TEXTURES[t],s=this.medias.find((t=>t.texture===e)),i=-s.bounds.left-s.bounds.width/2+window.innerWidth/2;this.update(),this.transition.animate({position:{x:0,y:s.mesh.position.y,z:0},rotation:s.mesh.rotation,scale:s.mesh.scale},(t=>{s.opacity.multiplier=1,h(this.medias,(t=>{s!==t&&t.show()})),this.scroll.current=this.scroll.target=this.scroll.start=this.scroll.last=i}))}else h(this.medias,(t=>t.show()))}hide(){h(this.medias,(t=>t.hide()))}onResize(t){this.sizes=t.sizes,this.bounds=this.galleryWrapperElement.getBoundingClientRect(),this.scroll.last=this.scroll.target=0,h(this.medias,(e=>e.onResize(t,this.scroll))),this.scroll.limit=this.bounds.width-this.medias[0].element.clientWidth}onTouchDown({x:t,y:e}){this.scroll.last=this.scroll.current}onTouchMove({x:t,y:e}){const s=t.start-t.end;this.scroll.target=this.scroll.last-s}onTouchUp({x:t,y:e}){}onWheel({pixelY:t}){this.scroll.target+=t}onChange(t){this.index=t;const e=parseInt(this.mediasElements[this.index].getAttribute("data-index"));h(this.collectionsElements,((t,s)=>{s===e?t.classList.add(this.collectionsElementsActive):t.classList.remove(this.collectionsElementsActive)})),this.titlesElement.style[this.transfromPrefix]=`\n      translateY(-${25*e}%)\n      translate(-50%, -50%)\n      rotate(-90deg)\n    `}update(){if(!this.bounds)return;this.scroll.target=r.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.galleryElement.style[this.transfromPrefix]=`translateX(${this.scroll.current}px)`,this.scroll.last<this.scroll.current?this.scroll.direction="right":this.scroll.last>this.scroll.current&&(this.scroll.direction="left"),this.scroll.last=this.scroll.current,h(this.medias,((t,e)=>{t.update(this.scroll.current)}));const t=Math.floor(Math.abs(this.scroll.current/this.scroll.limit)*this.medias.length);this.index!==t&&this.onChange(t),h(this.medias,((t,e)=>{t.update(this.scroll.current,this.index),t.mesh.rotation}))}destroy(){this.scene.removeChild(this.group)}}}},(function(t){t.h=()=>"667c0faff6f9d35526f9"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPMEIsTUFHYjVELEtBQUtpRCxlQUFlK0MsTUFBTWhHLEtBQUs2QyxpQkFBb0IsY0FBYTdDLEtBQUtrQyxPQUFPdUIsYUFFeEV6RCxLQUFLa0MsT0FBTzRDLEtBQU85RSxLQUFLa0MsT0FBT3VCLFFBQ2xDekQsS0FBS2tDLE9BQU8rRCxVQUFZLFFBQ2RqRyxLQUFLa0MsT0FBTzRDLEtBQU85RSxLQUFLa0MsT0FBT3VCLFVBQ3pDekQsS0FBS2tDLE9BQU8rRCxVQUFZLFFBR3pCakcsS0FBS2tDLE9BQU80QyxLQUFPOUUsS0FBS2tDLE9BQU91QixRQUUvQlMsRUFBSWxFLEtBQUtpRSxRQUFRLENBQUNJLEVBQU94RSxLQUN4QndFLEVBQU0xQixPQUFPM0MsS0FBS2tDLE9BQU91QixRQUF6QixJQUdELE1BQU01RCxFQUFRcUcsS0FBS0MsTUFBTUQsS0FBS0UsSUFBSXBHLEtBQUtrQyxPQUFPdUIsUUFBVXpELEtBQUtrQyxPQUFPOEMsT0FBU2hGLEtBQUtpRSxPQUFPb0MsUUFFckZyRyxLQUFLSCxRQUFVQSxHQUNsQkcsS0FBS3lGLFNBQVM1RixHQUlicUUsRUFBSWxFLEtBQUtpRSxRQUFRLENBQUNJLEVBQU14RSxLQUN0QndFLEVBQU0xQixPQUFPM0MsS0FBS2tDLE9BQU91QixRQUFTekQsS0FBS0gsT0FDdkN3RSxFQUFNaEQsS0FBS29ELFFBQVgsR0FHSixDQUdENkIsVUFDQ3RHLEtBQUtGLE1BQU15RyxZQUFZdkcsS0FBSytDLE1BQzVCLGtCQy9MRnlELEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvQ29sbGVjdGlvbnMvTWVkaWEuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL0NvbGxlY3Rpb25zL2luZGV4LmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZ3JhbSwgTWVzaCB9IGZyb20gJ29nbCdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnXG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHtcblx0Y29uc3RydWN0b3IoeyBlbGVtZW50LCBnZW9tZXRyeSwgZ2wsIGluZGV4LCBzY2VuZSwgc2l6ZXMgfSkge1xuXHRcdHRoaXMuZWxlbWVudCA9IGVsZW1lbnRcblx0XHR0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnlcblx0XHR0aGlzLmdsID0gZ2xcblx0XHR0aGlzLnNjZW5lID0gc2NlbmVcblx0XHR0aGlzLmluZGV4ID0gaW5kZXhcblx0XHR0aGlzLnNpemVzID0gc2l6ZXNcblxuXHRcdHRoaXMuY3JlYXRlVGV4dHVyZSgpXG5cdFx0dGhpcy5jcmVhdGVQcm9ncmFtKClcblx0XHR0aGlzLmNyZWF0ZU1lc2goKVxuXG5cdFx0dGhpcy5leHRyYSA9IHtcblx0XHRcdHg6IDAsXG5cdFx0XHR5OiAwLFxuXHRcdH1cblx0fVxuXG5cdGNyZWF0ZVRleHR1cmUoKSB7XG5cdFx0Y29uc3QgaW1hZ2UgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19tZWRpYV9faW1hZ2UnKVxuXHRcdHRoaXMudGV4dHVyZSA9IHdpbmRvdy5URVhUVVJFU1tpbWFnZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJyldXG5cdH1cblxuXHRjcmVhdGVQcm9ncmFtKCkge1xuXHRcdHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcblx0XHRcdGZyYWdtZW50LFxuXHRcdFx0dmVydGV4LFxuXHRcdFx0dW5pZm9ybXM6IHtcblx0XHRcdFx0dUFscGhhOiB7IHZhbHVlOiAwIH0sXG5cdFx0XHRcdHRNYXA6IHsgdmFsdWU6IHRoaXMudGV4dHVyZSB9LFxuXHRcdFx0fSxcblx0XHR9KVxuXHR9XG5cblx0Y3JlYXRlTWVzaCgpIHtcblx0XHR0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG5cdFx0XHRnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcblx0XHRcdHByb2dyYW06IHRoaXMucHJvZ3JhbSxcblx0XHR9KVxuXG5cdFx0dGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuXHR9XG5cblx0Y3JlYXRlQm91bmRzKHsgc2l6ZXMgfSkge1xuXHRcdHRoaXMuc2l6ZXMgPSBzaXplc1xuXG5cdFx0dGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblxuXHRcdHRoaXMudXBkYXRlU2NhbGUoc2l6ZXMpXG5cdFx0dGhpcy51cGRhdGVYKClcblx0XHR0aGlzLnVwZGF0ZVkoKVxuXHR9XG5cblx0LyogQW5pbWF0aW9ucyAqL1xuXG5cdHNob3coKSB7XG5cdFx0R1NBUC5mcm9tVG8oXG5cdFx0XHR0aGlzLnByb2dyYW0udW5pZm9ybXMudUFscGhhLFxuXHRcdFx0e1xuXHRcdFx0XHR2YWx1ZTogMCxcblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdHZhbHVlOiAxLFxuXHRcdFx0fVxuXHRcdClcblx0fVxuXHRoaWRlKCkge1xuXHRcdEdTQVAudG8odGhpcy5wcm9ncmFtLnVuaWZvcm1zLnVBbHBoYSwge1xuXHRcdFx0dmFsdWU6IDAsXG5cdFx0fSlcblx0fVxuXG5cdC8qIEV2ZW50cyAqL1xuXG5cdG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcblx0XHR0aGlzLmNyZWF0ZUJvdW5kcyhzaXplcylcblx0XHR0aGlzLmV4dHJhID0ge1xuXHRcdFx0eDogMCxcblx0XHRcdHk6IDAsXG5cdFx0fVxuXHRcdHRoaXMudXBkYXRlWChzY3JvbGwgPyBzY3JvbGwueCA6IDApXG5cdFx0dGhpcy51cGRhdGVZKHNjcm9sbCA/IHNjcm9sbC55IDogMClcblx0fVxuXG5cdC8qIExvb3BzICovXG5cblx0dXBkYXRlU2NhbGUoKSB7XG5cdFx0dGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGhcblx0XHR0aGlzLmhlaWdodCA9IHRoaXMuYm91bmRzLmhlaWdodCAvIHdpbmRvdy5pbm5lckhlaWdodFxuXG5cdFx0dGhpcy5tZXNoLnNjYWxlLnggPSB0aGlzLnNpemVzLndpZHRoICogdGhpcy53aWR0aFxuXHRcdHRoaXMubWVzaC5zY2FsZS55ID0gdGhpcy5zaXplcy5oZWlnaHQgKiB0aGlzLmhlaWdodFxuXHR9XG5cblx0dXBkYXRlWCh4ID0gMCkge1xuXHRcdHRoaXMueCA9ICh0aGlzLmJvdW5kcy5sZWZ0ICsgeCkgLyB3aW5kb3cuaW5uZXJXaWR0aFxuXG5cdFx0dGhpcy5tZXNoLnBvc2l0aW9uLnggPVxuXHRcdFx0LXRoaXMuc2l6ZXMud2lkdGggLyAyICsgdGhpcy5tZXNoLnNjYWxlLnggLyAyICsgdGhpcy54ICogdGhpcy5zaXplcy53aWR0aCArIHRoaXMuZXh0cmEueFxuXHR9XG5cblx0dXBkYXRlWSh5ID0gMCkge1xuXHRcdHRoaXMueSA9ICh0aGlzLmJvdW5kcy50b3AgKyB5KSAvIHdpbmRvdy5pbm5lckhlaWdodFxuXG5cdFx0dGhpcy5tZXNoLnBvc2l0aW9uLnkgPVxuXHRcdFx0dGhpcy5zaXplcy5oZWlnaHQgLyAyIC0gdGhpcy5tZXNoLnNjYWxlLnkgLyAyIC0gdGhpcy55ICogdGhpcy5zaXplcy5oZWlnaHQgKyB0aGlzLmV4dHJhLnlcblx0fVxuXG5cdHVwZGF0ZShzY3JvbGwpIHtcblx0XHRpZiAoIXRoaXMuYm91bmRzKSByZXR1cm5cblxuXHRcdHRoaXMudXBkYXRlWChzY3JvbGwpXG5cdFx0dGhpcy51cGRhdGVZKClcblx0fVxufVxuIiwiaW1wb3J0IHsgUGxhbmUsIFRyYW5zZm9ybSB9IGZyb20gJ29nbCdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5pbXBvcnQgUHJlZml4IGZyb20gJ3ByZWZpeCdcblxuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xuaW1wb3J0IE1lZGlhIGZyb20gJy4vTWVkaWEnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHtcblx0Y29uc3RydWN0b3IoeyBnbCwgc2NlbmUsIHNpemVzLCB0cmFuc2l0aW9uIH0pIHtcblx0XHR0aGlzLmdsID0gZ2xcblx0XHR0aGlzLnNpemVzID0gc2l6ZXNcblx0XHR0aGlzLnNjZW5lID0gc2NlbmVcblx0XHR0aGlzLnRyYW5zaXRpb24gPSB0cmFuc2l0aW9uXG5cblx0XHR0aGlzLnRyYW5zZnJvbVByZWZpeCA9IFByZWZpeCgndHJhbnNmb3JtJylcblxuXHRcdHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKClcblxuXHRcdHRoaXMuZ2FsbGVyeUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sbGVjdGlvbnNfX2dhbGxlcnknKVxuXHRcdHRoaXMuZ2FsbGVyeVdyYXBwZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbGxlY3Rpb25zX19nYWxsZXJ5X193cmFwcGVyJylcblxuXHRcdHRoaXMudGl0bGVzRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2xsZWN0aW9uc19fdGl0bGVzJylcblxuXHRcdHRoaXMuY29sbGVjdGlvbnNFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb2xsZWN0aW9uc19fYXJ0aWNsZScpXG5cdFx0dGhpcy5jb2xsZWN0aW9uc0VsZW1lbnRzQWN0aXZlID0gJ2NvbGxlY3Rpb25zX19hcnRpY2xlLS1hY3RpdmUnXG5cblx0XHR0aGlzLm1lZGlhc0VsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19tZWRpYScpXG5cblx0XHR0aGlzLnNjcm9sbCA9IHtcblx0XHRcdGN1cnJlbnQ6IDAsXG5cdFx0XHRzdGFydDogMCxcblx0XHRcdHRhcmdldDogMCxcblx0XHRcdGxlcnA6IDAuMSxcblx0XHRcdHZlbG9jaXR5OiAxLFxuXHRcdH1cblxuXHRcdHRoaXMuY3JlYXRlR2VvbWV0cnkoKVxuXHRcdHRoaXMuY3JlYXRlR2FsbGVyeSgpXG5cblx0XHR0aGlzLm9uUmVzaXplKHsgc2l6ZXM6IHRoaXMuc2l6ZXMgfSlcblxuXHRcdHRoaXMuZ3JvdXAuc2V0UGFyZW50KHRoaXMuc2NlbmUpXG5cblx0XHR0aGlzLnNob3coKVxuXHR9XG5cblx0Y3JlYXRlR2VvbWV0cnkoKSB7XG5cdFx0dGhpcy5nZW9tZXRyeSA9IG5ldyBQbGFuZSh0aGlzLmdsKVxuXHR9XG5cblx0Y3JlYXRlR2FsbGVyeSgpIHtcblx0XHR0aGlzLm1lZGlhcyA9IG1hcCh0aGlzLm1lZGlhc0VsZW1lbnRzLCAoZWxlbWVudCwgaW5kZXgpID0+IHtcblx0XHRcdHJldHVybiBuZXcgTWVkaWEoe1xuXHRcdFx0XHRlbGVtZW50LFxuXHRcdFx0XHRnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcblx0XHRcdFx0aW5kZXgsXG5cdFx0XHRcdGdsOiB0aGlzLmdsLFxuXHRcdFx0XHRzY2VuZTogdGhpcy5ncm91cCxcblx0XHRcdFx0c2l6ZXM6IHRoaXMuc2l6ZXMsXG5cdFx0XHR9KVxuXHRcdH0pXG5cdH1cblxuXHQvKiBBbmltYXRpb25zICovXG5cdGFzeW5jIHNob3coKSB7XG5cdFx0aWYgKHRoaXMudHJhbnNpdGlvbikge1xuXHRcdFx0Y29uc3QgeyBzcmMgfSA9IHRoaXMudHJhbnNpdGlvbi5tZXNoLnByb2dyYW0udW5pZm9ybXMudE1hcC52YWx1ZS5pbWFnZVxuXHRcdFx0Y29uc3QgdGV4dHVyZSA9IHdpbmRvdy5URVhUVVJFU1tzcmNdXG5cdFx0XHRjb25zdCBtZWRpYSA9IHRoaXMubWVkaWFzLmZpbmQobWVkaWEgPT4gbWVkaWEudGV4dHVyZSA9PT0gdGV4dHVyZSlcblx0XHRcdGNvbnN0IHNjcm9sbCA9IC1tZWRpYS5ib3VuZHMubGVmdCAtIG1lZGlhLmJvdW5kcy53aWR0aCAvIDIgKyB3aW5kb3cuaW5uZXJXaWR0aCAvIDJcblxuXHRcdFx0dGhpcy51cGRhdGUoKVxuXG5cdFx0XHR0aGlzLnRyYW5zaXRpb24uYW5pbWF0ZShcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHBvc2l0aW9uOiB7IHg6IDAsIHk6IG1lZGlhLm1lc2gucG9zaXRpb24ueSwgejogMCB9LFxuXHRcdFx0XHRcdHJvdGF0aW9uOiBtZWRpYS5tZXNoLnJvdGF0aW9uLFxuXHRcdFx0XHRcdHNjYWxlOiBtZWRpYS5tZXNoLnNjYWxlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRfID0+IHtcblx0XHRcdFx0XHRtZWRpYS5vcGFjaXR5Lm11bHRpcGxpZXIgPSAxXG5cblx0XHRcdFx0XHRtYXAodGhpcy5tZWRpYXMsIGl0ZW0gPT4ge1xuXHRcdFx0XHRcdFx0aWYgKG1lZGlhICE9PSBpdGVtKSB7XG5cdFx0XHRcdFx0XHRcdGl0ZW0uc2hvdygpXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0XHR0aGlzLnNjcm9sbC5jdXJyZW50ID0gdGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwuc3RhcnQgPSB0aGlzLnNjcm9sbC5sYXN0ID0gc2Nyb2xsXG5cdFx0XHRcdH1cblx0XHRcdClcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5zaG93KCkpXG5cdFx0fVxuXHR9XG5cdGhpZGUoKSB7XG5cdFx0bWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5oaWRlKCkpXG5cdH1cblxuXHQvKiBFdmVudHMgKi9cblx0b25SZXNpemUoZXZlbnQpIHtcblx0XHR0aGlzLnNpemVzID0gZXZlbnQuc2l6ZXNcblxuXHRcdHRoaXMuYm91bmRzID0gdGhpcy5nYWxsZXJ5V3JhcHBlckVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblxuXHRcdHRoaXMuc2Nyb2xsLmxhc3QgPSB0aGlzLnNjcm9sbC50YXJnZXQgPSAwXG5cblx0XHRtYXAodGhpcy5tZWRpYXMsIG1lZGlhID0+IG1lZGlhLm9uUmVzaXplKGV2ZW50LCB0aGlzLnNjcm9sbCkpXG5cblx0XHR0aGlzLnNjcm9sbC5saW1pdCA9IHRoaXMuYm91bmRzLndpZHRoIC0gdGhpcy5tZWRpYXNbMF0uZWxlbWVudC5jbGllbnRXaWR0aFxuXHR9XG5cblx0b25Ub3VjaERvd24oeyB4LCB5IH0pIHtcblx0XHR0aGlzLnNjcm9sbC5sYXN0ID0gdGhpcy5zY3JvbGwuY3VycmVudFxuXHR9XG5cblx0b25Ub3VjaE1vdmUoeyB4LCB5IH0pIHtcblx0XHRjb25zdCBkaXN0YW5jZSA9IHguc3RhcnQgLSB4LmVuZFxuXG5cdFx0dGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwubGFzdCAtIGRpc3RhbmNlXG5cdH1cblxuXHRvblRvdWNoVXAoeyB4LCB5IH0pIHt9XG5cblx0b25XaGVlbCh7IHBpeGVsWSB9KSB7XG5cdFx0dGhpcy5zY3JvbGwudGFyZ2V0ICs9IHBpeGVsWVxuXHR9XG5cblx0LyogQ2hhbmdlZCAqL1xuXHRvbkNoYW5nZShpbmRleCkge1xuXHRcdHRoaXMuaW5kZXggPSBpbmRleFxuXG5cdFx0Y29uc3Qgc2VsZWN0ZWRDb2xsZWN0aW9uID0gcGFyc2VJbnQodGhpcy5tZWRpYXNFbGVtZW50c1t0aGlzLmluZGV4XS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaW5kZXgnKSlcblxuXHRcdG1hcCh0aGlzLmNvbGxlY3Rpb25zRWxlbWVudHMsIChlbGVtZW50LCBlbGVtZW50SW5kZXgpID0+IHtcblx0XHRcdGlmIChlbGVtZW50SW5kZXggPT09IHNlbGVjdGVkQ29sbGVjdGlvbikge1xuXHRcdFx0XHRlbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5jb2xsZWN0aW9uc0VsZW1lbnRzQWN0aXZlKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY29sbGVjdGlvbnNFbGVtZW50c0FjdGl2ZSlcblx0XHRcdH1cblx0XHR9KVxuXG5cdFx0dGhpcy50aXRsZXNFbGVtZW50LnN0eWxlW3RoaXMudHJhbnNmcm9tUHJlZml4XSA9IGBcbiAgICAgIHRyYW5zbGF0ZVkoLSR7MjUgKiBzZWxlY3RlZENvbGxlY3Rpb259JSlcbiAgICAgIHRyYW5zbGF0ZSgtNTAlLCAtNTAlKVxuICAgICAgcm90YXRlKC05MGRlZylcbiAgICBgXG5cdH1cblxuXHQvKiBVcGRhdGUgKi9cblx0dXBkYXRlKCkge1xuXHRcdGlmICghdGhpcy5ib3VuZHMpIHJldHVyblxuXG5cdFx0dGhpcy5zY3JvbGwudGFyZ2V0ID0gR1NBUC51dGlscy5jbGFtcCgtdGhpcy5zY3JvbGwubGltaXQsIDAsIHRoaXMuc2Nyb2xsLnRhcmdldClcblxuXHRcdHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKFxuXHRcdFx0dGhpcy5zY3JvbGwuY3VycmVudCxcblx0XHRcdHRoaXMuc2Nyb2xsLnRhcmdldCxcblx0XHRcdHRoaXMuc2Nyb2xsLmxlcnBcblx0XHQpXG5cblx0XHR0aGlzLmdhbGxlcnlFbGVtZW50LnN0eWxlW3RoaXMudHJhbnNmcm9tUHJlZml4XSA9IGB0cmFuc2xhdGVYKCR7dGhpcy5zY3JvbGwuY3VycmVudH1weClgXG5cblx0XHRpZiAodGhpcy5zY3JvbGwubGFzdCA8IHRoaXMuc2Nyb2xsLmN1cnJlbnQpIHtcblx0XHRcdHRoaXMuc2Nyb2xsLmRpcmVjdGlvbiA9ICdyaWdodCdcblx0XHR9IGVsc2UgaWYgKHRoaXMuc2Nyb2xsLmxhc3QgPiB0aGlzLnNjcm9sbC5jdXJyZW50KSB7XG5cdFx0XHR0aGlzLnNjcm9sbC5kaXJlY3Rpb24gPSAnbGVmdCdcblx0XHR9XG5cblx0XHR0aGlzLnNjcm9sbC5sYXN0ID0gdGhpcy5zY3JvbGwuY3VycmVudFxuXG5cdFx0bWFwKHRoaXMubWVkaWFzLCAobWVkaWEsIGluZGV4KSA9PiB7XG5cdFx0XHRtZWRpYS51cGRhdGUodGhpcy5zY3JvbGwuY3VycmVudClcblx0XHR9KVxuXG5cdFx0Y29uc3QgaW5kZXggPSBNYXRoLmZsb29yKE1hdGguYWJzKHRoaXMuc2Nyb2xsLmN1cnJlbnQgLyB0aGlzLnNjcm9sbC5saW1pdCkgKiB0aGlzLm1lZGlhcy5sZW5ndGgpXG5cblx0XHRpZiAodGhpcy5pbmRleCAhPT0gaW5kZXgpIHtcblx0XHRcdHRoaXMub25DaGFuZ2UoaW5kZXgpXG5cdFx0fVxuXG5cbiAgICBtYXAodGhpcy5tZWRpYXMsIChtZWRpYSxpbmRleCkgPT4ge1xuICAgICAgbWVkaWEudXBkYXRlKHRoaXMuc2Nyb2xsLmN1cnJlbnQsIHRoaXMuaW5kZXgpXG4gICAgICBtZWRpYS5tZXNoLnJvdGF0aW9uXG4gICAgfSlcblxuXHR9XG5cblx0LyogRGVzdHJveSAqL1xuXHRkZXN0cm95KCkge1xuXHRcdHRoaXMuc2NlbmUucmVtb3ZlQ2hpbGQodGhpcy5ncm91cClcblx0fVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNjY3YzBmYWZmNmY5ZDM1NTI2ZjlcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZ2VvbWV0cnkiLCJnbCIsImluZGV4Iiwic2NlbmUiLCJzaXplcyIsInRoaXMiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJleHRyYSIsIngiLCJ5IiwiaW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwidGV4dHVyZSIsIndpbmRvdyIsIlRFWFRVUkVTIiwiZ2V0QXR0cmlidXRlIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidUFscGhhIiwidmFsdWUiLCJ0TWFwIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJjcmVhdGVCb3VuZHMiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ1cGRhdGVTY2FsZSIsInVwZGF0ZVgiLCJ1cGRhdGVZIiwic2hvdyIsIkdTQVAiLCJoaWRlIiwib25SZXNpemUiLCJzY3JvbGwiLCJ3aWR0aCIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsInNjYWxlIiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwidHJhbnNpdGlvbiIsInRyYW5zZnJvbVByZWZpeCIsIlByZWZpeCIsImdyb3VwIiwiVHJhbnNmb3JtIiwiZ2FsbGVyeUVsZW1lbnQiLCJkb2N1bWVudCIsImdhbGxlcnlXcmFwcGVyRWxlbWVudCIsInRpdGxlc0VsZW1lbnQiLCJjb2xsZWN0aW9uc0VsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbGxlY3Rpb25zRWxlbWVudHNBY3RpdmUiLCJtZWRpYXNFbGVtZW50cyIsImN1cnJlbnQiLCJzdGFydCIsInRhcmdldCIsImxlcnAiLCJ2ZWxvY2l0eSIsImNyZWF0ZUdlb21ldHJ5IiwiY3JlYXRlR2FsbGVyeSIsIlBsYW5lIiwibWVkaWFzIiwibWFwIiwiTWVkaWEiLCJzcmMiLCJtZWRpYSIsImZpbmQiLCJhbmltYXRlIiwieiIsInJvdGF0aW9uIiwiXyIsIm9wYWNpdHkiLCJtdWx0aXBsaWVyIiwiaXRlbSIsImxhc3QiLCJldmVudCIsImxpbWl0IiwiY2xpZW50V2lkdGgiLCJvblRvdWNoRG93biIsIm9uVG91Y2hNb3ZlIiwiZGlzdGFuY2UiLCJlbmQiLCJvblRvdWNoVXAiLCJvbldoZWVsIiwicGl4ZWxZIiwib25DaGFuZ2UiLCJzZWxlY3RlZENvbGxlY3Rpb24iLCJwYXJzZUludCIsImVsZW1lbnRJbmRleCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInN0eWxlIiwiZGlyZWN0aW9uIiwiTWF0aCIsImZsb29yIiwiYWJzIiwibGVuZ3RoIiwiZGVzdHJveSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9