/*! For license information please see main.b0fa0df6a07df8acd04b.hot-update.js.LICENSE.txt */
self.webpackHotUpdateimmersive_website("main",{"./node_modules/prefix/index.js":e=>{var t="undefined"!=typeof document?document.createElement("p").style:{},s=["O","ms","Moz","Webkit"],n=/([A-Z])/g,r={};function i(e){if(e=e.replace(/-([a-z])/g,(function(e,t){return t.toUpperCase()})),void 0!==t[e])return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),r=s.length;r--;){var i=s[r]+n;if(void 0!==t[i])return i}return e}e.exports=function(e){return e in r?r[e]:r[e]=i(e)},e.exports.dash=function(e){return e=i(e),n.test(e)&&(e="-"+e.replace(n,"-$1"),n.lastIndex=0),e.toLowerCase()}},"./app/classes/Page.js":(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>l});var n=s("./node_modules/lodash/each.js"),r=s("./node_modules/gsap/index.js"),i=s("./node_modules/prefix/index.js"),o=s("./node_modules/console-browserify/index.js");class l{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t},this.id=s,this.transformPrefix=i("transform"),o.log(this.transformPrefix)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0},n(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animationIn=r.default.timeline(),r.default.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=r.default.timeline(),r.default.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){o.log(e);const{deltaY:t}=e;o.log(t),this.scroll.target=t}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheel)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheel)}update(){this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}}}},(function(e){e.h=()=>"33d2a2bd982d57d92df3"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,