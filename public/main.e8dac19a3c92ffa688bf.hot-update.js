/*! For license information please see main.e8dac19a3c92ffa688bf.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/animations/Title.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var n=s("./app/classes/Animation.js"),a=s("./node_modules/gsap/index.js"),i=s("./app/utils/text.js");class l extends n.default{constructor({element:e,elements:t}){super({element:e,elements:t}),(0,i.split)({element:this.element,append:!0}),(0,i.split)({element:this.element,append:!0}),this.elementLinesSpan=this.element.querySelector("span span")}animateIn(){a.default.fromTo(this.element,{autoAlpha:0},{autoAlpha:1,delay:.5,duration:1.5})}animateOut(){a.default.set(this.element,{autoAlpha:0})}onResize(){this.elementLines=(0,i.calculate)(this.elementLinesSpan)}}},"./app/classes/Animation.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var n=s("./app/classes/Component.js"),a=s("./node_modules/console-browserify/index.js");class i extends n.default{constructor({element:e,elements:t}){super({element:e,elements:t}),this.createObserver(),this.animateOut()}createObserver(){this.observer=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(a.log("animate in"),this.animateIn()):(a.log("animate out"),this.animateOut())}))})),this.observer.observe(this.element)}animateOut(){}animateIn(){}}}},(function(e){e.h=()=>"efd981b40a1f2158c321"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5lOGRhYzE5YTNjOTJmZmE2ODhiZi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cU9BSWUsTUFBTUEsVUFBY0MsRUFBQUEsUUFDakNDLGFBQVksUUFBRUMsRUFBRixTQUFXQyxJQUNyQkMsTUFBTSxDQUFFRixVQUFTQyxjQUVqQkUsRUFBQUEsRUFBQUEsT0FBTSxDQUNKSCxRQUFTSSxLQUFLSixRQUNkSyxRQUFRLEtBRVZGLEVBQUFBLEVBQUFBLE9BQU0sQ0FDSkgsUUFBU0ksS0FBS0osUUFDZEssUUFBUSxJQUdWRCxLQUFLRSxpQkFBbUJGLEtBQUtKLFFBQVFPLGNBQWMsWUFDcEQsQ0FFREMsWUFDRUMsRUFBQUEsUUFBQUEsT0FDRUwsS0FBS0osUUFDTCxDQUNFVSxVQUFXLEdBRWIsQ0FDRUEsVUFBVyxFQUNYQyxNQUFPLEdBQ1BDLFNBQVUsS0FHZixDQUNEQyxhQUNFSixFQUFBQSxRQUFBQSxJQUFTTCxLQUFLSixRQUFTLENBQ3JCVSxVQUFXLEdBRWQsQ0FFREksV0FDRVYsS0FBS1csY0FBZUMsRUFBQUEsRUFBQUEsV0FBVVosS0FBS0UsaUJBQ3BDLGlLQ3ZDWSxNQUFNUixVQUFrQm1CLEVBQUFBLFFBQ3JDbEIsYUFBWSxRQUFFQyxFQUFGLFNBQVdDLElBQ3JCQyxNQUFNLENBQUVGLFVBQVNDLGFBRWpCRyxLQUFLYyxpQkFFTGQsS0FBS1MsWUFDTixDQUVESyxpQkFDRWQsS0FBS2UsU0FBVyxJQUFJQyxzQkFBc0JDLElBQ3hDQSxFQUFRQyxTQUFTQyxJQUNYQSxFQUFNQyxnQkFDUkMsRUFBUUMsSUFBSSxjQUNadEIsS0FBS0ksY0FFTGlCLEVBQVFDLElBQUksZUFDWnRCLEtBQUtTLGFBQ04sR0FQSCxJQVdGVCxLQUFLZSxTQUFTUSxRQUFRdkIsS0FBS0osUUFDNUIsQ0FFRGEsYUFBZSxDQUVmTCxZQUFjLGtCQzdCaEJvQixFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvLi9hcHAvYW5pbWF0aW9ucy9UaXRsZS5qcyIsIndlYnBhY2s6Ly9pbW1lcnNpdmUtd2Vic2l0ZS8uL2FwcC9jbGFzc2VzL0FuaW1hdGlvbi5qcyIsIndlYnBhY2s6Ly9pbW1lcnNpdmUtd2Vic2l0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFuaW1hdGlvbiBmcm9tIFwiY2xhc3Nlcy9BbmltYXRpb25cIjtcbmltcG9ydCBHU0FQIGZyb20gXCJnc2FwXCI7XG5pbXBvcnQgeyBjYWxjdWxhdGUsIHNwbGl0IH0gZnJvbSBcInV0aWxzL3RleHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGl0bGUgZXh0ZW5kcyBBbmltYXRpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGVsZW1lbnQsIGVsZW1lbnRzIH0pIHtcbiAgICBzdXBlcih7IGVsZW1lbnQsIGVsZW1lbnRzIH0pO1xuXG4gICAgc3BsaXQoe1xuICAgICAgZWxlbWVudDogdGhpcy5lbGVtZW50LFxuICAgICAgYXBwZW5kOiB0cnVlLFxuICAgIH0pO1xuICAgIHNwbGl0KHtcbiAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudCxcbiAgICAgIGFwcGVuZDogdHJ1ZSxcbiAgICB9KTtcblxuICAgIHRoaXMuZWxlbWVudExpbmVzU3BhbiA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwic3BhbiBzcGFuXCIpO1xuICB9XG5cbiAgYW5pbWF0ZUluKCkge1xuICAgIEdTQVAuZnJvbVRvKFxuICAgICAgdGhpcy5lbGVtZW50LFxuICAgICAge1xuICAgICAgICBhdXRvQWxwaGE6IDAsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBhdXRvQWxwaGE6IDEsXG4gICAgICAgIGRlbGF5OiAwLjUsXG4gICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuICBhbmltYXRlT3V0KCkge1xuICAgIEdTQVAuc2V0KHRoaXMuZWxlbWVudCwge1xuICAgICAgYXV0b0FscGhhOiAwLFxuICAgIH0pO1xuICB9XG5cbiAgb25SZXNpemUoKSB7XG4gICAgdGhpcy5lbGVtZW50TGluZXMgPSBjYWxjdWxhdGUodGhpcy5lbGVtZW50TGluZXNTcGFuKTtcbiAgfVxufVxuIiwiaW1wb3J0IENvbXBvbmVudCBmcm9tIFwiY2xhc3Nlcy9Db21wb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQW5pbWF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBlbGVtZW50cyB9KSB7XG4gICAgc3VwZXIoeyBlbGVtZW50LCBlbGVtZW50cyB9KTtcblxuICAgIHRoaXMuY3JlYXRlT2JzZXJ2ZXIoKTtcblxuICAgIHRoaXMuYW5pbWF0ZU91dCgpO1xuICB9XG5cbiAgY3JlYXRlT2JzZXJ2ZXIoKSB7XG4gICAgdGhpcy5vYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZW50cmllcykgPT4ge1xuICAgICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xuICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImFuaW1hdGUgaW5cIik7XG4gICAgICAgICAgdGhpcy5hbmltYXRlSW4oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImFuaW1hdGUgb3V0XCIpO1xuICAgICAgICAgIHRoaXMuYW5pbWF0ZU91dCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLmVsZW1lbnQpO1xuICB9XG5cbiAgYW5pbWF0ZU91dCgpIHt9XG5cbiAgYW5pbWF0ZUluKCkge31cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImVmZDk4MWI0MGExZjIxNThjMzIxXCIpIl0sIm5hbWVzIjpbIlRpdGxlIiwiQW5pbWF0aW9uIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJzdXBlciIsInNwbGl0IiwidGhpcyIsImFwcGVuZCIsImVsZW1lbnRMaW5lc1NwYW4iLCJxdWVyeVNlbGVjdG9yIiwiYW5pbWF0ZUluIiwiR1NBUCIsImF1dG9BbHBoYSIsImRlbGF5IiwiZHVyYXRpb24iLCJhbmltYXRlT3V0Iiwib25SZXNpemUiLCJlbGVtZW50TGluZXMiLCJjYWxjdWxhdGUiLCJDb21wb25lbnQiLCJjcmVhdGVPYnNlcnZlciIsIm9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImVudHJ5IiwiaXNJbnRlcnNlY3RpbmciLCJjb25zb2xlIiwibG9nIiwib2JzZXJ2ZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==