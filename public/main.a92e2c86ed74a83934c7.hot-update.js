/*! For license information please see main.a92e2c86ed74a83934c7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/components/Canvas/About/Gallery.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>a});var i=e("./node_modules/ogl/src/core/Transform.js"),h=e("./node_modules/gsap/index.js"),r=e("./node_modules/lodash/map.js"),o=e("./app/components/Canvas/About/Media.js");class a{constructor({element:s,geometry:t,index:e,gl:h,scene:r,sizes:o}){this.element=s,this.elementWrapper=s.querySelector(".about__gallery__wrapper"),this.geometry=t,this.index=e,this.gl=h,this.scene=r,this.sizes=o,this.group=new i.Transform,this.scroll={current:0,start:0,target:0,lerp:.1},this.createMedias(),this.onResize({sizes:this.sizes}),this.group.setParent(this.scene)}createMedias(){this.mediasElements=this.element.querySelectorAll(".about__gallery__media"),this.medias=r(this.mediasElements,((s,t)=>new o.default({element:s,geometry:this.geometry,index:t,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){r(this.medias,(s=>s.show()))}hide(){r(this.medias,(s=>s.hide()))}onResize(s){this.bounds=this.elementWrapper.getBoundingClientRect(),this.sizes=s.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,r(this.medias,(t=>t.onResize(s,this.scroll.current)))}onTouchDown({x:s,y:t}){this.scroll.start=this.scroll.current}onTouchMove({x:s,y:t}){const e=s.start-s.end;this.scroll.target=this.scroll.start-e}onTouchUp({x:s,y:t}){}update(s){this.bounds&&(this.scroll.current<this.scroll.target?(this.direction="right",this.scroll.velocity=.5):this.scroll.current>this.scroll.target&&(this.direction="left",this.scroll.velocity=.5),this.scroll.target-=.5,this.scroll.current=h.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),r(this.medias,((s,t)=>{const e=s.mesh.scale.x/2+.25;if(" left"===this.direction){s.mesh.position.x+e<-this.sizes.width/2&&(s.extra+=this.width)}else if("right"===this.direction){s.mesh.position.x-e>this.sizes.width/2&&(s.extra-=this.width)}s.update(this.scroll.current)})),this.group.position.y=s*this.sizes.height)}destroy(){this.scene.removeChild(this.group)}}},"./app/components/Canvas/About/Media.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>l});var i=e("./node_modules/ogl/src/core/Texture.js"),h=e("./node_modules/ogl/src/core/Program.js"),r=e("./node_modules/ogl/src/core/Mesh.js"),o=e("./node_modules/gsap/index.js"),a=e("./app/shaders/plane-fragment.glsl"),n=e("./app/shaders/plane-vertex.glsl");const l=class{constructor({element:s,geometry:t,gl:e,index:i,scene:h,sizes:r}){this.element=s,this.geometry=t,this.gl=e,this.scene=h,this.index=i,this.sizes=r,this.extra={x:0,y:0},this.createTexture(),this.createProgram(),this.createMesh()}createTexture(){this.texture=new i.Texture(this.gl);const s=this.element.querySelector("img");this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=s.getAttribute("data-src"),this.image.onload=s=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:a.default,vertex:n.default,uniforms:{uAlpha:{value:0},tMap:{value:this.texture}}})}createMesh(){this.mesh=new r.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:s}){this.sizes=s,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}show(){o.default.fromTo(this.program.uniforms.uAlpha,{value:0},{value:1})}hide(){o.default.to(this.program.uniforms.uAlpha,{value:0})}onResize(s,t){this.extra=0,this.createBounds(s),this.updateX(t),this.updateY(0)}updateRotation(){const s=this.mesh.rotation.z=o.default.utils.mapRange(-this.sizes.width/2,this.sizes.width/2,.1*Math.PI,.1*-Math.PI,this.mesh.position.x);this.mesh.rotation.z=s}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(s=0){this.x=(this.bounds.left+s)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra}updateY(s=0){this.y=(this.bounds.top+s)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height,this.mesh.position.y+=40*Math.cos(this.mesh.position.x/this.sizes.width*Math.PI*.1)-40}update(s){this.bounds&&(this.updateRotation(),this.updateScale(),this.updateX(s),this.updateY(0))}}}},(function(s){s.h=()=>"5b71c8c0bfc2d5c8b412"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFlBRTFDNUUsS0FBS3VDLEtBQUtDLE1BQU1aLEVBQUk1QixLQUFLRCxNQUFNeUIsTUFBUXhCLEtBQUt3QixNQUM1Q3hCLEtBQUt1QyxLQUFLQyxNQUFNWCxFQUFJN0IsS0FBS0QsTUFBTTRDLE9BQVMzQyxLQUFLMkMsTUFDN0MsQ0FDRDBCLFFBQVF6QyxFQUFJLEdBQ1g1QixLQUFLNEIsR0FBSzVCLEtBQUtzQixPQUFPdUQsS0FBT2pELEdBQUtILE9BQU9DLFdBRXpDMUIsS0FBS3VDLEtBQUtFLFNBQVNiLEdBQ2pCNUIsS0FBS0QsTUFBTXlCLE1BQVEsRUFBSXhCLEtBQUt1QyxLQUFLQyxNQUFNWixFQUFJLEVBQUk1QixLQUFLNEIsRUFBSTVCLEtBQUtELE1BQU15QixNQUFReEIsS0FBSzBDLEtBQ2xGLENBQ0Q0QixRQUFRekMsRUFBSSxHQUNYN0IsS0FBSzZCLEdBQUs3QixLQUFLc0IsT0FBT3dELElBQU1qRCxHQUFLSixPQUFPbUQsWUFFeEM1RSxLQUFLdUMsS0FBS0UsU0FBU1osRUFDbEI3QixLQUFLRCxNQUFNNEMsT0FBUyxFQUFJM0MsS0FBS3VDLEtBQUtDLE1BQU1YLEVBQUksRUFBSTdCLEtBQUs2QixFQUFJN0IsS0FBS0QsTUFBTTRDLE9BRXJFM0MsS0FBS3VDLEtBQUtFLFNBQVNaLEdBQ29ELEdBQXRFNkMsS0FBS0ssSUFBSy9FLEtBQUt1QyxLQUFLRSxTQUFTYixFQUFJNUIsS0FBS0QsTUFBTXlCLE1BQVNrRCxLQUFLQyxHQUFLLElBQVksRUFDNUUsQ0FFRHpDLE9BQU83QixHQUNETCxLQUFLc0IsU0FFVnRCLEtBQUt1RSxpQkFFTHZFLEtBQUtvRSxjQUNMcEUsS0FBS3FFLFFBQVFoRSxHQUNiTCxLQUFLc0UsUUFBUSxHQUNiLGtCQzNJRlUsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2ltbWVyc2l2ZS13ZWJzaXRlLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL0Fib3V0L0dhbGxlcnkuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvQWJvdXQvTWVkaWEuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zZm9ybSB9IGZyb20gJ29nbCdcblxuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcblxuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xuXG5pbXBvcnQgTWVkaWEgZnJvbSAnLi9NZWRpYSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FsbGVyeSB7XG5cdGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGluZGV4LCBnbCwgc2NlbmUsIHNpemVzIH0pIHtcblx0XHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50XG5cdFx0dGhpcy5lbGVtZW50V3JhcHBlciA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmFib3V0X19nYWxsZXJ5X193cmFwcGVyJylcblxuXHRcdHRoaXMuZ2VvbWV0cnkgPSBnZW9tZXRyeVxuXHRcdHRoaXMuaW5kZXggPSBpbmRleFxuXHRcdHRoaXMuZ2wgPSBnbFxuXHRcdHRoaXMuc2NlbmUgPSBzY2VuZVxuXHRcdHRoaXMuc2l6ZXMgPSBzaXplc1xuXG5cdFx0dGhpcy5ncm91cCA9IG5ldyBUcmFuc2Zvcm0oKVxuXG5cdFx0dGhpcy5zY3JvbGwgPSB7XG5cdFx0XHRjdXJyZW50OiAwLFxuXHRcdFx0c3RhcnQ6IDAsXG5cdFx0XHR0YXJnZXQ6IDAsXG5cdFx0XHRsZXJwOiAwLjEsXG5cdFx0fVxuXG5cdFx0dGhpcy5jcmVhdGVNZWRpYXMoKVxuXG5cdFx0dGhpcy5vblJlc2l6ZSh7IHNpemVzOiB0aGlzLnNpemVzIH0pXG5cblx0XHR0aGlzLmdyb3VwLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuXHR9XG5cblx0Y3JlYXRlTWVkaWFzKCkge1xuXHRcdHRoaXMubWVkaWFzRWxlbWVudHMgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFib3V0X19nYWxsZXJ5X19tZWRpYScpXG5cblx0XHR0aGlzLm1lZGlhcyA9IG1hcCh0aGlzLm1lZGlhc0VsZW1lbnRzLCAoZWxlbWVudCwgaW5kZXgpID0+IHtcblx0XHRcdHJldHVybiBuZXcgTWVkaWEoe1xuXHRcdFx0XHRlbGVtZW50LFxuXHRcdFx0XHRnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcblx0XHRcdFx0aW5kZXgsXG5cdFx0XHRcdGdsOiB0aGlzLmdsLFxuXHRcdFx0XHRzY2VuZTogdGhpcy5ncm91cCxcblx0XHRcdFx0c2l6ZXM6IHRoaXMuc2l6ZXMsXG5cdFx0XHR9KVxuXHRcdH0pXG5cdH1cblxuXHQvKiBBbmltYXRpb25zICovXG5cdHNob3coKSB7XG5cdFx0bWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5zaG93KCkpXG5cdH1cblx0aGlkZSgpIHtcblx0XHRtYXAodGhpcy5tZWRpYXMsIG1lZGlhID0+IG1lZGlhLmhpZGUoKSlcblx0fVxuXG5cdC8qIEV2ZW50cyAqL1xuXG5cdG9uUmVzaXplKGV2ZW50KSB7XG5cdFx0dGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnRXcmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cblx0XHR0aGlzLnNpemVzID0gZXZlbnQuc2l6ZXNcblxuXHRcdHRoaXMud2lkdGggPSAodGhpcy5ib3VuZHMud2lkdGggLyB3aW5kb3cuaW5uZXJXaWR0aCkgKiB0aGlzLnNpemVzLndpZHRoXG5cblx0XHR0aGlzLnNjcm9sbC5jdXJyZW50ID0gdGhpcy5zY3JvbGwudGFyZ2V0ID0gMFxuXG5cdFx0bWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5vblJlc2l6ZShldmVudCwgdGhpcy5zY3JvbGwuY3VycmVudCkpXG5cdH1cblxuXHRvblRvdWNoRG93bih7IHgsIHkgfSkge1xuXHRcdHRoaXMuc2Nyb2xsLnN0YXJ0ID0gdGhpcy5zY3JvbGwuY3VycmVudFxuXHR9XG5cblx0b25Ub3VjaE1vdmUoeyB4LCB5IH0pIHtcblx0XHRjb25zdCBkaXN0YW5jZSA9IHguc3RhcnQgLSB4LmVuZFxuXG5cdFx0dGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwuc3RhcnQgLSBkaXN0YW5jZVxuXHR9XG5cblx0b25Ub3VjaFVwKHsgeCwgeSB9KSB7fVxuXG5cdC8qIFVwZGF0ZSAqL1xuXG5cdHVwZGF0ZSh5KSB7XG5cdFx0aWYgKCF0aGlzLmJvdW5kcykgcmV0dXJuXG5cblx0XHRpZiAodGhpcy5zY3JvbGwuY3VycmVudCA8IHRoaXMuc2Nyb2xsLnRhcmdldCkge1xuXHRcdFx0dGhpcy5kaXJlY3Rpb24gPSAncmlnaHQnXG4gICAgICB0aGlzLnNjcm9sbC52ZWxvY2l0eSA9IDAuNVxuXHRcdH0gZWxzZSBpZiAodGhpcy5zY3JvbGwuY3VycmVudCA+IHRoaXMuc2Nyb2xsLnRhcmdldCkge1xuXHRcdFx0dGhpcy5kaXJlY3Rpb24gPSAnbGVmdCdcbiAgICAgIHRoaXMuc2Nyb2xsLnZlbG9jaXR5ID0gMC41XG5cdFx0fVxuXG5cdFx0dGhpcy5zY3JvbGwudGFyZ2V0IC09IDAuNVxuXG5cdFx0dGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuaW50ZXJwb2xhdGUoXG5cdFx0XHR0aGlzLnNjcm9sbC5jdXJyZW50LFxuXHRcdFx0dGhpcy5zY3JvbGwudGFyZ2V0LFxuXHRcdFx0dGhpcy5zY3JvbGwubGVycFxuXHRcdClcblxuXHRcdG1hcCh0aGlzLm1lZGlhcywgKG1lZGlhLCBpbmRleCkgPT4ge1xuXHRcdFx0Y29uc3Qgc2NhbGVYID0gbWVkaWEubWVzaC5zY2FsZS54IC8gMiArIDAuMjVcblxuXHRcdFx0aWYgKHRoaXMuZGlyZWN0aW9uID09PSAnIGxlZnQnKSB7XG5cdFx0XHRcdGNvbnN0IHggPSBtZWRpYS5tZXNoLnBvc2l0aW9uLnggKyBzY2FsZVhcblxuXHRcdFx0XHRpZiAoeCA8IC10aGlzLnNpemVzLndpZHRoIC8gMikge1xuXHRcdFx0XHRcdG1lZGlhLmV4dHJhICs9IHRoaXMud2lkdGhcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xuXHRcdFx0XHRjb25zdCB4ID0gbWVkaWEubWVzaC5wb3NpdGlvbi54IC0gc2NhbGVYXG5cblx0XHRcdFx0aWYgKHggPiB0aGlzLnNpemVzLndpZHRoIC8gMikge1xuXHRcdFx0XHRcdG1lZGlhLmV4dHJhIC09IHRoaXMud2lkdGhcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRtZWRpYS51cGRhdGUodGhpcy5zY3JvbGwuY3VycmVudClcblx0XHR9KVxuXG5cdFx0dGhpcy5ncm91cC5wb3NpdGlvbi55ID0geSAqIHRoaXMuc2l6ZXMuaGVpZ2h0XG5cdH1cblxuXHQvKiBEZXN0cm95ICovXG5cblx0ZGVzdHJveSgpIHtcblx0XHR0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMuZ3JvdXApXG5cdH1cbn1cbiIsImltcG9ydCB7IFRleHR1cmUsIFByb2dyYW0sIE1lc2ggfSBmcm9tICdvZ2wnXG5pbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xuXG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnc2hhZGVycy9wbGFuZS1mcmFnbWVudC5nbHNsJ1xuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG5cdGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzIH0pIHtcblx0XHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50XG5cdFx0dGhpcy5nZW9tZXRyeSA9IGdlb21ldHJ5XG5cdFx0dGhpcy5nbCA9IGdsXG5cdFx0dGhpcy5zY2VuZSA9IHNjZW5lXG5cdFx0dGhpcy5pbmRleCA9IGluZGV4XG5cdFx0dGhpcy5zaXplcyA9IHNpemVzXG5cblx0XHR0aGlzLmV4dHJhID0ge1xuXHRcdFx0eDogMCxcblx0XHRcdHk6IDAsXG5cdFx0fVxuXG5cdFx0dGhpcy5jcmVhdGVUZXh0dXJlKClcblx0XHR0aGlzLmNyZWF0ZVByb2dyYW0oKVxuXHRcdHRoaXMuY3JlYXRlTWVzaCgpXG5cdH1cblxuXHRjcmVhdGVUZXh0dXJlKCkge1xuXHRcdHRoaXMudGV4dHVyZSA9IG5ldyBUZXh0dXJlKHRoaXMuZ2wpXG5cblx0XHRjb25zdCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbWcnKVxuXG5cdFx0dGhpcy5pbWFnZSA9IG5ldyB3aW5kb3cuSW1hZ2UoKVxuXHRcdHRoaXMuaW1hZ2UuY3Jvc3NPcmlnaW4gPSAnYW5vbnltb3VzJ1xuXHRcdHRoaXMuaW1hZ2Uuc3JjID0gaW1hZ2UuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXG5cdFx0dGhpcy5pbWFnZS5vbmxvYWQgPSBfID0+ICh0aGlzLnRleHR1cmUuaW1hZ2UgPSB0aGlzLmltYWdlKVxuXHR9XG5cblx0Y3JlYXRlUHJvZ3JhbSgpIHtcblx0XHR0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG5cdFx0XHRmcmFnbWVudCxcblx0XHRcdHZlcnRleCxcblx0XHRcdHVuaWZvcm1zOiB7XG5cdFx0XHRcdHVBbHBoYTogeyB2YWx1ZTogMCB9LFxuXHRcdFx0XHR0TWFwOiB7IHZhbHVlOiB0aGlzLnRleHR1cmUgfSxcblx0XHRcdH0sXG5cdFx0fSlcblx0fVxuXG5cdGNyZWF0ZU1lc2goKSB7XG5cdFx0dGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuXHRcdFx0Z2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXG5cdFx0XHRwcm9ncmFtOiB0aGlzLnByb2dyYW0sXG5cdFx0fSlcblxuXHRcdHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcblx0fVxuXG5cdGNyZWF0ZUJvdW5kcyh7IHNpemVzIH0pIHtcblx0XHR0aGlzLnNpemVzID0gc2l6ZXNcblxuXHRcdHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cblx0XHR0aGlzLnVwZGF0ZVNjYWxlKClcblx0XHR0aGlzLnVwZGF0ZVgoKVxuXHRcdHRoaXMudXBkYXRlWSgpXG5cdH1cblxuXHQvKiBBbmltYXRpb25zICovXG5cblx0c2hvdygpIHtcblx0XHRHU0FQLmZyb21Ubyhcblx0XHRcdHRoaXMucHJvZ3JhbS51bmlmb3Jtcy51QWxwaGEsXG5cdFx0XHR7XG5cdFx0XHRcdHZhbHVlOiAwLFxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0dmFsdWU6IDEsXG5cdFx0XHR9XG5cdFx0KVxuXHR9XG5cdGhpZGUoKSB7XG5cdFx0R1NBUC50byh0aGlzLnByb2dyYW0udW5pZm9ybXMudUFscGhhLCB7XG5cdFx0XHR2YWx1ZTogMCxcblx0XHR9KVxuXHR9XG5cblx0LyogRXZlbnRzICovXG5cdG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcblx0XHR0aGlzLmV4dHJhID0gMFxuXG5cdFx0dGhpcy5jcmVhdGVCb3VuZHMoc2l6ZXMpXG5cdFx0dGhpcy51cGRhdGVYKHNjcm9sbClcblx0XHR0aGlzLnVwZGF0ZVkoMClcblx0fVxuXG5cdC8qIExvb3AgKi9cblxuXHR1cGRhdGVSb3RhdGlvbigpIHtcblx0XHRjb25zdCByb3RhdGlvbiA9ICh0aGlzLm1lc2gucm90YXRpb24ueiA9IEdTQVAudXRpbHMubWFwUmFuZ2UoXG5cdFx0XHQtdGhpcy5zaXplcy53aWR0aCAvIDIsXG5cdFx0XHR0aGlzLnNpemVzLndpZHRoIC8gMixcblx0XHRcdE1hdGguUEkgKiAwLjEsXG5cdFx0XHQtTWF0aC5QSSAqIDAuMSxcblx0XHRcdHRoaXMubWVzaC5wb3NpdGlvbi54XG5cdFx0KSlcblxuXHRcdHRoaXMubWVzaC5yb3RhdGlvbi56ID0gcm90YXRpb25cblx0fVxuXG5cdHVwZGF0ZVNjYWxlKCkge1xuXHRcdHRoaXMud2lkdGggPSB0aGlzLmJvdW5kcy53aWR0aCAvIHdpbmRvdy5pbm5lcldpZHRoXG5cdFx0dGhpcy5oZWlnaHQgPSB0aGlzLmJvdW5kcy5oZWlnaHQgLyB3aW5kb3cuaW5uZXJIZWlnaHRcblxuXHRcdHRoaXMubWVzaC5zY2FsZS54ID0gdGhpcy5zaXplcy53aWR0aCAqIHRoaXMud2lkdGhcblx0XHR0aGlzLm1lc2guc2NhbGUueSA9IHRoaXMuc2l6ZXMuaGVpZ2h0ICogdGhpcy5oZWlnaHRcblx0fVxuXHR1cGRhdGVYKHggPSAwKSB7XG5cdFx0dGhpcy54ID0gKHRoaXMuYm91bmRzLmxlZnQgKyB4KSAvIHdpbmRvdy5pbm5lcldpZHRoXG5cblx0XHR0aGlzLm1lc2gucG9zaXRpb24ueCA9XG5cdFx0XHQtdGhpcy5zaXplcy53aWR0aCAvIDIgKyB0aGlzLm1lc2guc2NhbGUueCAvIDIgKyB0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoICsgdGhpcy5leHRyYVxuXHR9XG5cdHVwZGF0ZVkoeSA9IDApIHtcblx0XHR0aGlzLnkgPSAodGhpcy5ib3VuZHMudG9wICsgeSkgLyB3aW5kb3cuaW5uZXJIZWlnaHRcblxuXHRcdHRoaXMubWVzaC5wb3NpdGlvbi55ID1cblx0XHRcdHRoaXMuc2l6ZXMuaGVpZ2h0IC8gMiAtIHRoaXMubWVzaC5zY2FsZS55IC8gMiAtIHRoaXMueSAqIHRoaXMuc2l6ZXMuaGVpZ2h0XG5cblx0XHR0aGlzLm1lc2gucG9zaXRpb24ueSArPVxuXHRcdFx0TWF0aC5jb3MoKHRoaXMubWVzaC5wb3NpdGlvbi54IC8gdGhpcy5zaXplcy53aWR0aCkgKiBNYXRoLlBJICogMC4xKSAqIDQwIC0gNDBcblx0fVxuXG5cdHVwZGF0ZShzY3JvbGwpIHtcblx0XHRpZiAoIXRoaXMuYm91bmRzKSByZXR1cm5cblxuXHRcdHRoaXMudXBkYXRlUm90YXRpb24oKVxuXG5cdFx0dGhpcy51cGRhdGVTY2FsZSgpXG5cdFx0dGhpcy51cGRhdGVYKHNjcm9sbClcblx0XHR0aGlzLnVwZGF0ZVkoMClcblx0fVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNWI3MWM4YzBiZmMyZDVjOGI0MTJcIikiXSwibmFtZXMiOlsiR2FsbGVyeSIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImdlb21ldHJ5IiwiaW5kZXgiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwiZWxlbWVudFdyYXBwZXIiLCJxdWVyeVNlbGVjdG9yIiwiZ3JvdXAiLCJUcmFuc2Zvcm0iLCJzY3JvbGwiLCJjdXJyZW50Iiwic3RhcnQiLCJ0YXJnZXQiLCJsZXJwIiwiY3JlYXRlTWVkaWFzIiwib25SZXNpemUiLCJzZXRQYXJlbnQiLCJtZWRpYXNFbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJtZWRpYXMiLCJtYXAiLCJNZWRpYSIsInNob3ciLCJtZWRpYSIsImhpZGUiLCJldmVudCIsImJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIm9uVG91Y2hEb3duIiwieCIsInkiLCJvblRvdWNoTW92ZSIsImRpc3RhbmNlIiwiZW5kIiwib25Ub3VjaFVwIiwidXBkYXRlIiwiZGlyZWN0aW9uIiwidmVsb2NpdHkiLCJHU0FQIiwic2NhbGVYIiwibWVzaCIsInNjYWxlIiwicG9zaXRpb24iLCJleHRyYSIsImhlaWdodCIsImRlc3Ryb3kiLCJyZW1vdmVDaGlsZCIsImNyZWF0ZVRleHR1cmUiLCJjcmVhdGVQcm9ncmFtIiwiY3JlYXRlTWVzaCIsInRleHR1cmUiLCJUZXh0dXJlIiwiaW1hZ2UiLCJJbWFnZSIsImNyb3NzT3JpZ2luIiwic3JjIiwiZ2V0QXR0cmlidXRlIiwib25sb2FkIiwiXyIsInByb2dyYW0iLCJQcm9ncmFtIiwiZnJhZ21lbnQiLCJ2ZXJ0ZXgiLCJ1bmlmb3JtcyIsInVBbHBoYSIsInZhbHVlIiwidE1hcCIsIk1lc2giLCJjcmVhdGVCb3VuZHMiLCJ1cGRhdGVTY2FsZSIsInVwZGF0ZVgiLCJ1cGRhdGVZIiwidXBkYXRlUm90YXRpb24iLCJyb3RhdGlvbiIsInoiLCJNYXRoIiwiUEkiLCJpbm5lckhlaWdodCIsImxlZnQiLCJ0b3AiLCJjb3MiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=