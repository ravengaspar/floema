/*! For license information please see main.d5c0298e2884c795d46a.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/components/Canvas/index.js":(t,e,r)=>{r.r(e),r.d(e,{default:()=>n});var s=r("./node_modules/ogl/src/core/Renderer.js"),i=r("./node_modules/ogl/src/core/Camera.js");class n{constructor(){this.createRenderer()}createRenderer(){this.renderer=new s.Renderer,this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new i.Camera(this.gl),this.camera.position=5}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight)}}},"./node_modules/ogl/src/core/Camera.js":(t,e,r)=>{r.r(e),r.d(e,{Camera:()=>u});var s=r("./node_modules/ogl/src/core/Transform.js"),i=r("./node_modules/ogl/src/math/Mat4.js"),n=r("./node_modules/ogl/src/math/Vec3.js");const h=new i.Mat4,a=new n.Vec3,o=new n.Vec3;class u extends s.Transform{constructor(t,{near:e=.1,far:r=100,fov:s=45,aspect:h=1,left:a,right:o,bottom:u,top:c,zoom:l=1}={}){super(),Object.assign(this,{near:e,far:r,fov:s,aspect:h,left:a,right:o,bottom:u,top:c,zoom:l}),this.projectionMatrix=new i.Mat4,this.viewMatrix=new i.Mat4,this.projectionViewMatrix=new i.Mat4,this.worldPosition=new n.Vec3,this.type=a||o?"orthographic":"perspective","orthographic"===this.type?this.orthographic():this.perspective()}perspective({near:t=this.near,far:e=this.far,fov:r=this.fov,aspect:s=this.aspect}={}){return Object.assign(this,{near:t,far:e,fov:r,aspect:s}),this.projectionMatrix.fromPerspective({fov:r*(Math.PI/180),aspect:s,near:t,far:e}),this.type="perspective",this}orthographic({near:t=this.near,far:e=this.far,left:r=this.left,right:s=this.right,bottom:i=this.bottom,top:n=this.top,zoom:h=this.zoom}={}){return Object.assign(this,{near:t,far:e,left:r,right:s,bottom:i,top:n,zoom:h}),r/=h,s/=h,i/=h,n/=h,this.projectionMatrix.fromOrthogonal({left:r,right:s,bottom:i,top:n,near:t,far:e}),this.type="orthographic",this}updateMatrixWorld(){return super.updateMatrixWorld(),this.viewMatrix.inverse(this.worldMatrix),this.worldMatrix.getTranslation(this.worldPosition),this.projectionViewMatrix.multiply(this.projectionMatrix,this.viewMatrix),this}lookAt(t){return super.lookAt(t,!0),this}project(t){return t.applyMatrix4(this.viewMatrix),t.applyMatrix4(this.projectionMatrix),this}unproject(t){return t.applyMatrix4(h.inverse(this.projectionMatrix)),t.applyMatrix4(this.worldMatrix),this}updateFrustum(){this.frustum||(this.frustum=[new n.Vec3,new n.Vec3,new n.Vec3,new n.Vec3,new n.Vec3,new n.Vec3]);const t=this.projectionViewMatrix;this.frustum[0].set(t[3]-t[0],t[7]-t[4],t[11]-t[8]).constant=t[15]-t[12],this.frustum[1].set(t[3]+t[0],t[7]+t[4],t[11]+t[8]).constant=t[15]+t[12],this.frustum[2].set(t[3]+t[1],t[7]+t[5],t[11]+t[9]).constant=t[15]+t[13],this.frustum[3].set(t[3]-t[1],t[7]-t[5],t[11]-t[9]).constant=t[15]-t[13],this.frustum[4].set(t[3]-t[2],t[7]-t[6],t[11]-t[10]).constant=t[15]-t[14],this.frustum[5].set(t[3]+t[2],t[7]+t[6],t[11]+t[10]).constant=t[15]+t[14];for(let t=0;t<6;t++){const e=1/this.frustum[t].distance();this.frustum[t].multiply(e),this.frustum[t].constant*=e}}frustumIntersectsMesh(t){if(!t.geometry.attributes.position)return!0;if(t.geometry.bounds&&t.geometry.bounds.radius!==1/0||t.geometry.computeBoundingSphere(),!t.geometry.bounds)return!0;const e=a;e.copy(t.geometry.bounds.center),e.applyMatrix4(t.worldMatrix);const r=t.geometry.bounds.radius*t.worldMatrix.getMaxScaleOnAxis();return this.frustumIntersectsSphere(e,r)}frustumIntersectsSphere(t,e){const r=o;for(let s=0;s<6;s++){const i=this.frustum[s];if(r.copy(i).dot(t)+i.constant<-e)return!1}return!0}}},"./node_modules/ogl/src/core/Transform.js":(t,e,r)=>{r.r(e),r.d(e,{Transform:()=>a});var s=r("./node_modules/ogl/src/math/Vec3.js"),i=r("./node_modules/ogl/src/math/Quat.js"),n=r("./node_modules/ogl/src/math/Mat4.js"),h=r("./node_modules/ogl/src/math/Euler.js");class a{constructor(){this.parent=null,this.children=[],this.visible=!0,this.matrix=new n.Mat4,this.worldMatrix=new n.Mat4,this.matrixAutoUpdate=!0,this.position=new s.Vec3,this.quaternion=new i.Quat,this.scale=new s.Vec3(1),this.rotation=new h.Euler,this.up=new s.Vec3(0,1,0),this.rotation.onChange=()=>this.quaternion.fromEuler(this.rotation),this.quaternion.onChange=()=>this.rotation.fromQuaternion(this.quaternion)}setParent(t,e=!0){this.parent&&t!==this.parent&&this.parent.removeChild(this,!1),this.parent=t,e&&t&&t.addChild(this,!1)}addChild(t,e=!0){~this.children.indexOf(t)||this.children.push(t),e&&t.setParent(this,!1)}removeChild(t,e=!0){~this.children.indexOf(t)&&this.children.splice(this.children.indexOf(t),1),e&&t.setParent(null,!1)}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.worldMatrixNeedsUpdate||t)&&(null===this.parent?this.worldMatrix.copy(this.matrix):this.worldMatrix.multiply(this.parent.worldMatrix,this.matrix),this.worldMatrixNeedsUpdate=!1,t=!0);for(let e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)}updateMatrix(){this.matrix.compose(this.quaternion,this.position,this.scale),this.worldMatrixNeedsUpdate=!0}traverse(t){if(!t(this))for(let e=0,r=this.children.length;e<r;e++)this.children[e].traverse(t)}decompose(){this.matrix.getTranslation(this.position),this.matrix.getRotation(this.quaternion),this.matrix.getScaling(this.scale),this.rotation.fromQuaternion(this.quaternion)}lookAt(t,e=!1){e?this.matrix.lookAt(this.position,t,this.up):this.matrix.lookAt(t,this.position,this.up),this.matrix.getRotation(this.quaternion),this.rotation.fromQuaternion(this.quaternion)}}},"./node_modules/ogl/src/math/Euler.js":(t,e,r)=>{r.r(e),r.d(e,{Euler:()=>n});var s=r("./node_modules/ogl/src/math/functions/EulerFunc.js");const i=new(r("./node_modules/ogl/src/math/Mat4.js").Mat4);class n extends Array{constructor(t=0,e=t,r=t,s="YXZ"){return super(t,e,r),this.order=s,this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this[0]=t,this.onChange()}set y(t){this[1]=t,this.onChange()}set z(t){this[2]=t,this.onChange()}set(t,e=t,r=t){return t.length?this.copy(t):(this[0]=t,this[1]=e,this[2]=r,this.onChange(),this)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.onChange(),this}reorder(t){return this.order=t,this.onChange(),this}fromRotationMatrix(t,e=this.order){return s.fromRotationMatrix(this,t,e),this}fromQuaternion(t,e=this.order){return i.fromQuaternion(t),this.fromRotationMatrix(i,e)}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t}}},"./node_modules/ogl/src/math/Mat4.js":(t,e,r)=>{r.r(e),r.d(e,{Mat4:()=>i});var s=r("./node_modules/ogl/src/math/functions/Mat4Func.js");class i extends Array{constructor(t=1,e=0,r=0,s=0,i=0,n=1,h=0,a=0,o=0,u=0,c=1,l=0,m=0,d=0,p=0,f=1){return super(t,e,r,s,i,n,h,a,o,u,c,l,m,d,p,f),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(t){this[12]=t}set y(t){this[13]=t}set z(t){this[14]=t}set w(t){this[15]=t}set(t,e,r,i,n,h,a,o,u,c,l,m,d,p,f,M){return t.length?this.copy(t):(s.set(this,t,e,r,i,n,h,a,o,u,c,l,m,d,p,f,M),this)}translate(t,e=this){return s.translate(this,e,t),this}rotate(t,e,r=this){return s.rotate(this,r,t,e),this}scale(t,e=this){return s.scale(this,e,"number"==typeof t?[t,t,t]:t),this}multiply(t,e){return e?s.multiply(this,t,e):s.multiply(this,this,t),this}identity(){return s.identity(this),this}copy(t){return s.copy(this,t),this}fromPerspective({fov:t,aspect:e,near:r,far:i}={}){return s.perspective(this,t,e,r,i),this}fromOrthogonal({left:t,right:e,bottom:r,top:i,near:n,far:h}){return s.ortho(this,t,e,r,i,n,h),this}fromQuaternion(t){return s.fromQuat(this,t),this}setPosition(t){return this.x=t[0],this.y=t[1],this.z=t[2],this}inverse(t=this){return s.invert(this,t),this}compose(t,e,r){return s.fromRotationTranslationScale(this,t,e,r),this}getRotation(t){return s.getRotation(t,this),this}getTranslation(t){return s.getTranslation(t,this),this}getScaling(t){return s.getScaling(t,this),this}getMaxScaleOnAxis(){return s.getMaxScaleOnAxis(this)}lookAt(t,e,r){return s.targetTo(this,t,e,r),this}determinant(){return s.determinant(this)}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this[3]=t[e+3],this[4]=t[e+4],this[5]=t[e+5],this[6]=t[e+6],this[7]=t[e+7],this[8]=t[e+8],this[9]=t[e+9],this[10]=t[e+10],this[11]=t[e+11],this[12]=t[e+12],this[13]=t[e+13],this[14]=t[e+14],this[15]=t[e+15],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t[e+4]=this[4],t[e+5]=this[5],t[e+6]=this[6],t[e+7]=this[7],t[e+8]=this[8],t[e+9]=this[9],t[e+10]=this[10],t[e+11]=this[11],t[e+12]=this[12],t[e+13]=this[13],t[e+14]=this[14],t[e+15]=this[15],t}}},"./node_modules/ogl/src/math/Quat.js":(t,e,r)=>{r.r(e),r.d(e,{Quat:()=>i});var s=r("./node_modules/ogl/src/math/functions/QuatFunc.js");class i extends Array{constructor(t=0,e=0,r=0,s=1){return super(t,e,r,s),this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(t){this[0]=t,this.onChange()}set y(t){this[1]=t,this.onChange()}set z(t){this[2]=t,this.onChange()}set w(t){this[3]=t,this.onChange()}identity(){return s.identity(this),this.onChange(),this}set(t,e,r,i){return t.length?this.copy(t):(s.set(this,t,e,r,i),this.onChange(),this)}rotateX(t){return s.rotateX(this,this,t),this.onChange(),this}rotateY(t){return s.rotateY(this,this,t),this.onChange(),this}rotateZ(t){return s.rotateZ(this,this,t),this.onChange(),this}inverse(t=this){return s.invert(this,t),this.onChange(),this}conjugate(t=this){return s.conjugate(this,t),this.onChange(),this}copy(t){return s.copy(this,t),this.onChange(),this}normalize(t=this){return s.normalize(this,t),this.onChange(),this}multiply(t,e){return e?s.multiply(this,t,e):s.multiply(this,this,t),this.onChange(),this}dot(t){return s.dot(this,t)}fromMatrix3(t){return s.fromMat3(this,t),this.onChange(),this}fromEuler(t){return s.fromEuler(this,t,t.order),this}fromAxisAngle(t,e){return s.setAxisAngle(this,t,e),this}slerp(t,e){return s.slerp(this,this,t,e),this}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this[3]=t[e+3],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t}}},"./node_modules/ogl/src/math/functions/EulerFunc.js":(t,e,r)=>{function s(t,e,r="YXZ"){return"XYZ"===r?(t[1]=Math.asin(Math.min(Math.max(e[8],-1),1)),Math.abs(e[8])<.99999?(t[0]=Math.atan2(-e[9],e[10]),t[2]=Math.atan2(-e[4],e[0])):(t[0]=Math.atan2(e[6],e[5]),t[2]=0)):"YXZ"===r?(t[0]=Math.asin(-Math.min(Math.max(e[9],-1),1)),Math.abs(e[9])<.99999?(t[1]=Math.atan2(e[8],e[10]),t[2]=Math.atan2(e[1],e[5])):(t[1]=Math.atan2(-e[2],e[0]),t[2]=0)):"ZXY"===r?(t[0]=Math.asin(Math.min(Math.max(e[6],-1),1)),Math.abs(e[6])<.99999?(t[1]=Math.atan2(-e[2],e[10]),t[2]=Math.atan2(-e[4],e[5])):(t[1]=0,t[2]=Math.atan2(e[1],e[0]))):"ZYX"===r?(t[1]=Math.asin(-Math.min(Math.max(e[2],-1),1)),Math.abs(e[2])<.99999?(t[0]=Math.atan2(e[6],e[10]),t[2]=Math.atan2(e[1],e[0])):(t[0]=0,t[2]=Math.atan2(-e[4],e[5]))):"YZX"===r?(t[2]=Math.asin(Math.min(Math.max(e[1],-1),1)),Math.abs(e[1])<.99999?(t[0]=Math.atan2(-e[9],e[5]),t[1]=Math.atan2(-e[2],e[0])):(t[0]=0,t[1]=Math.atan2(e[8],e[10]))):"XZY"===r&&(t[2]=Math.asin(-Math.min(Math.max(e[4],-1),1)),Math.abs(e[4])<.99999?(t[0]=Math.atan2(e[6],e[5]),t[1]=Math.atan2(e[8],e[0])):(t[0]=Math.atan2(-e[9],e[10]),t[1]=0)),t}r.r(e),r.d(e,{fromRotationMatrix:()=>s})},"./node_modules/ogl/src/math/functions/Mat4Func.js":(t,e,r)=>{r.r(e),r.d(e,{add:()=>j,copy:()=>s,determinant:()=>o,fromQuat:()=>x,fromRotationTranslationScale:()=>g,getMaxScaleOnAxis:()=>f,getRotation:()=>M,getScaling:()=>p,getTranslation:()=>d,identity:()=>n,invert:()=>a,multiply:()=>u,multiplyScalar:()=>b,ortho:()=>w,perspective:()=>y,rotate:()=>m,scale:()=>l,set:()=>i,subtract:()=>C,targetTo:()=>v,translate:()=>c,transpose:()=>h});function s(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function i(t,e,r,s,i,n,h,a,o,u,c,l,m,d,p,f,M){return t[0]=e,t[1]=r,t[2]=s,t[3]=i,t[4]=n,t[5]=h,t[6]=a,t[7]=o,t[8]=u,t[9]=c,t[10]=l,t[11]=m,t[12]=d,t[13]=p,t[14]=f,t[15]=M,t}function n(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function h(t,e){if(t===e){let r=e[1],s=e[2],i=e[3],n=e[6],h=e[7],a=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[6]=e[9],t[7]=e[13],t[8]=s,t[9]=n,t[11]=e[14],t[12]=i,t[13]=h,t[14]=a}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t}function a(t,e){let r=e[0],s=e[1],i=e[2],n=e[3],h=e[4],a=e[5],o=e[6],u=e[7],c=e[8],l=e[9],m=e[10],d=e[11],p=e[12],f=e[13],M=e[14],g=e[15],x=r*a-s*h,y=r*o-i*h,w=r*u-n*h,v=s*o-i*a,j=s*u-n*a,C=i*u-n*o,b=c*f-l*p,A=c*M-m*p,_=c*g-d*p,q=l*M-m*f,z=l*g-d*f,V=m*g-d*M,X=x*V-y*z+w*q+v*_-j*A+C*b;return X?(X=1/X,t[0]=(a*V-o*z+u*q)*X,t[1]=(i*z-s*V-n*q)*X,t[2]=(f*C-M*j+g*v)*X,t[3]=(m*j-l*C-d*v)*X,t[4]=(o*_-h*V-u*A)*X,t[5]=(r*V-i*_+n*A)*X,t[6]=(M*w-p*C-g*y)*X,t[7]=(c*C-m*w+d*y)*X,t[8]=(h*z-a*_+u*b)*X,t[9]=(s*_-r*z-n*b)*X,t[10]=(p*j-f*w+g*x)*X,t[11]=(l*w-c*j-d*x)*X,t[12]=(a*A-h*q-o*b)*X,t[13]=(r*q-s*A+i*b)*X,t[14]=(f*y-p*v-M*x)*X,t[15]=(c*v-l*y+m*x)*X,t):null}function o(t){let e=t[0],r=t[1],s=t[2],i=t[3],n=t[4],h=t[5],a=t[6],o=t[7],u=t[8],c=t[9],l=t[10],m=t[11],d=t[12],p=t[13],f=t[14],M=t[15];return(e*h-r*n)*(l*M-m*f)-(e*a-s*n)*(c*M-m*p)+(e*o-i*n)*(c*f-l*p)+(r*a-s*h)*(u*M-m*d)-(r*o-i*h)*(u*f-l*d)+(s*o-i*a)*(u*p-c*d)}function u(t,e,r){let s=e[0],i=e[1],n=e[2],h=e[3],a=e[4],o=e[5],u=e[6],c=e[7],l=e[8],m=e[9],d=e[10],p=e[11],f=e[12],M=e[13],g=e[14],x=e[15],y=r[0],w=r[1],v=r[2],j=r[3];return t[0]=y*s+w*a+v*l+j*f,t[1]=y*i+w*o+v*m+j*M,t[2]=y*n+w*u+v*d+j*g,t[3]=y*h+w*c+v*p+j*x,y=r[4],w=r[5],v=r[6],j=r[7],t[4]=y*s+w*a+v*l+j*f,t[5]=y*i+w*o+v*m+j*M,t[6]=y*n+w*u+v*d+j*g,t[7]=y*h+w*c+v*p+j*x,y=r[8],w=r[9],v=r[10],j=r[11],t[8]=y*s+w*a+v*l+j*f,t[9]=y*i+w*o+v*m+j*M,t[10]=y*n+w*u+v*d+j*g,t[11]=y*h+w*c+v*p+j*x,y=r[12],w=r[13],v=r[14],j=r[15],t[12]=y*s+w*a+v*l+j*f,t[13]=y*i+w*o+v*m+j*M,t[14]=y*n+w*u+v*d+j*g,t[15]=y*h+w*c+v*p+j*x,t}function c(t,e,r){let s,i,n,h,a,o,u,c,l,m,d,p,f=r[0],M=r[1],g=r[2];return e===t?(t[12]=e[0]*f+e[4]*M+e[8]*g+e[12],t[13]=e[1]*f+e[5]*M+e[9]*g+e[13],t[14]=e[2]*f+e[6]*M+e[10]*g+e[14],t[15]=e[3]*f+e[7]*M+e[11]*g+e[15]):(s=e[0],i=e[1],n=e[2],h=e[3],a=e[4],o=e[5],u=e[6],c=e[7],l=e[8],m=e[9],d=e[10],p=e[11],t[0]=s,t[1]=i,t[2]=n,t[3]=h,t[4]=a,t[5]=o,t[6]=u,t[7]=c,t[8]=l,t[9]=m,t[10]=d,t[11]=p,t[12]=s*f+a*M+l*g+e[12],t[13]=i*f+o*M+m*g+e[13],t[14]=n*f+u*M+d*g+e[14],t[15]=h*f+c*M+p*g+e[15]),t}function l(t,e,r){let s=r[0],i=r[1],n=r[2];return t[0]=e[0]*s,t[1]=e[1]*s,t[2]=e[2]*s,t[3]=e[3]*s,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,t[11]=e[11]*n,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function m(t,e,r,s){let i,n,h,a,o,u,c,l,m,d,p,f,M,g,x,y,w,v,j,C,b,A,_,q,z=s[0],V=s[1],X=s[2],Y=Math.hypot(z,V,X);return Math.abs(Y)<1e-6?null:(Y=1/Y,z*=Y,V*=Y,X*=Y,i=Math.sin(r),n=Math.cos(r),h=1-n,a=e[0],o=e[1],u=e[2],c=e[3],l=e[4],m=e[5],d=e[6],p=e[7],f=e[8],M=e[9],g=e[10],x=e[11],y=z*z*h+n,w=V*z*h+X*i,v=X*z*h-V*i,j=z*V*h-X*i,C=V*V*h+n,b=X*V*h+z*i,A=z*X*h+V*i,_=V*X*h-z*i,q=X*X*h+n,t[0]=a*y+l*w+f*v,t[1]=o*y+m*w+M*v,t[2]=u*y+d*w+g*v,t[3]=c*y+p*w+x*v,t[4]=a*j+l*C+f*b,t[5]=o*j+m*C+M*b,t[6]=u*j+d*C+g*b,t[7]=c*j+p*C+x*b,t[8]=a*A+l*_+f*q,t[9]=o*A+m*_+M*q,t[10]=u*A+d*_+g*q,t[11]=c*A+p*_+x*q,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}function d(t,e){return t[0]=e[12],t[1]=e[13],t[2]=e[14],t}function p(t,e){let r=e[0],s=e[1],i=e[2],n=e[4],h=e[5],a=e[6],o=e[8],u=e[9],c=e[10];return t[0]=Math.hypot(r,s,i),t[1]=Math.hypot(n,h,a),t[2]=Math.hypot(o,u,c),t}function f(t){let e=t[0],r=t[1],s=t[2],i=t[4],n=t[5],h=t[6],a=t[8],o=t[9],u=t[10];const c=e*e+r*r+s*s,l=i*i+n*n+h*h,m=a*a+o*o+u*u;return Math.sqrt(Math.max(c,l,m))}const M=function(){const t=[0,0,0];return function(e,r){let s=t;p(s,r);let i=1/s[0],n=1/s[1],h=1/s[2],a=r[0]*i,o=r[1]*n,u=r[2]*h,c=r[4]*i,l=r[5]*n,m=r[6]*h,d=r[8]*i,f=r[9]*n,M=r[10]*h,g=a+l+M,x=0;return g>0?(x=2*Math.sqrt(g+1),e[3]=.25*x,e[0]=(m-f)/x,e[1]=(d-u)/x,e[2]=(o-c)/x):a>l&&a>M?(x=2*Math.sqrt(1+a-l-M),e[3]=(m-f)/x,e[0]=.25*x,e[1]=(o+c)/x,e[2]=(d+u)/x):l>M?(x=2*Math.sqrt(1+l-a-M),e[3]=(d-u)/x,e[0]=(o+c)/x,e[1]=.25*x,e[2]=(m+f)/x):(x=2*Math.sqrt(1+M-a-l),e[3]=(o-c)/x,e[0]=(d+u)/x,e[1]=(m+f)/x,e[2]=.25*x),e}}();function g(t,e,r,s){let i=e[0],n=e[1],h=e[2],a=e[3],o=i+i,u=n+n,c=h+h,l=i*o,m=i*u,d=i*c,p=n*u,f=n*c,M=h*c,g=a*o,x=a*u,y=a*c,w=s[0],v=s[1],j=s[2];return t[0]=(1-(p+M))*w,t[1]=(m+y)*w,t[2]=(d-x)*w,t[3]=0,t[4]=(m-y)*v,t[5]=(1-(l+M))*v,t[6]=(f+g)*v,t[7]=0,t[8]=(d+x)*j,t[9]=(f-g)*j,t[10]=(1-(l+p))*j,t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t}function x(t,e){let r=e[0],s=e[1],i=e[2],n=e[3],h=r+r,a=s+s,o=i+i,u=r*h,c=s*h,l=s*a,m=i*h,d=i*a,p=i*o,f=n*h,M=n*a,g=n*o;return t[0]=1-l-p,t[1]=c+g,t[2]=m-M,t[3]=0,t[4]=c-g,t[5]=1-u-p,t[6]=d+f,t[7]=0,t[8]=m+M,t[9]=d-f,t[10]=1-u-l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function y(t,e,r,s,i){let n=1/Math.tan(e/2),h=1/(s-i);return t[0]=n/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(i+s)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*i*s*h,t[15]=0,t}function w(t,e,r,s,i,n,h){let a=1/(e-r),o=1/(s-i),u=1/(n-h);return t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(e+r)*a,t[13]=(i+s)*o,t[14]=(h+n)*u,t[15]=1,t}function v(t,e,r,s){let i=e[0],n=e[1],h=e[2],a=s[0],o=s[1],u=s[2],c=i-r[0],l=n-r[1],m=h-r[2],d=c*c+l*l+m*m;0===d?m=1:(d=1/Math.sqrt(d),c*=d,l*=d,m*=d);let p=o*m-u*l,f=u*c-a*m,M=a*l-o*c;return d=p*p+f*f+M*M,0===d&&(u?a+=1e-6:o?u+=1e-6:o+=1e-6,p=o*m-u*l,f=u*c-a*m,M=a*l-o*c,d=p*p+f*f+M*M),d=1/Math.sqrt(d),p*=d,f*=d,M*=d,t[0]=p,t[1]=f,t[2]=M,t[3]=0,t[4]=l*M-m*f,t[5]=m*p-c*M,t[6]=c*f-l*p,t[7]=0,t[8]=c,t[9]=l,t[10]=m,t[11]=0,t[12]=i,t[13]=n,t[14]=h,t[15]=1,t}function j(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t[3]=e[3]+r[3],t[4]=e[4]+r[4],t[5]=e[5]+r[5],t[6]=e[6]+r[6],t[7]=e[7]+r[7],t[8]=e[8]+r[8],t[9]=e[9]+r[9],t[10]=e[10]+r[10],t[11]=e[11]+r[11],t[12]=e[12]+r[12],t[13]=e[13]+r[13],t[14]=e[14]+r[14],t[15]=e[15]+r[15],t}function C(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t[2]=e[2]-r[2],t[3]=e[3]-r[3],t[4]=e[4]-r[4],t[5]=e[5]-r[5],t[6]=e[6]-r[6],t[7]=e[7]-r[7],t[8]=e[8]-r[8],t[9]=e[9]-r[9],t[10]=e[10]-r[10],t[11]=e[11]-r[11],t[12]=e[12]-r[12],t[13]=e[13]-r[13],t[14]=e[14]-r[14],t[15]=e[15]-r[15],t}function b(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[7]=e[7]*r,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=e[11]*r,t[12]=e[12]*r,t[13]=e[13]*r,t[14]=e[14]*r,t[15]=e[15]*r,t}},"./node_modules/ogl/src/math/functions/QuatFunc.js":(t,e,r)=>{r.r(e),r.d(e,{add:()=>g,conjugate:()=>m,copy:()=>f,dot:()=>y,fromEuler:()=>p,fromMat3:()=>d,identity:()=>i,invert:()=>l,length:()=>v,lerp:()=>w,multiply:()=>h,normalize:()=>j,rotateX:()=>a,rotateY:()=>o,rotateZ:()=>u,scale:()=>x,set:()=>M,setAxisAngle:()=>n,slerp:()=>c});var s=r("./node_modules/ogl/src/math/functions/Vec4Func.js");function i(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t}function n(t,e,r){r*=.5;let s=Math.sin(r);return t[0]=s*e[0],t[1]=s*e[1],t[2]=s*e[2],t[3]=Math.cos(r),t}function h(t,e,r){let s=e[0],i=e[1],n=e[2],h=e[3],a=r[0],o=r[1],u=r[2],c=r[3];return t[0]=s*c+h*a+i*u-n*o,t[1]=i*c+h*o+n*a-s*u,t[2]=n*c+h*u+s*o-i*a,t[3]=h*c-s*a-i*o-n*u,t}function a(t,e,r){r*=.5;let s=e[0],i=e[1],n=e[2],h=e[3],a=Math.sin(r),o=Math.cos(r);return t[0]=s*o+h*a,t[1]=i*o+n*a,t[2]=n*o-i*a,t[3]=h*o-s*a,t}function o(t,e,r){r*=.5;let s=e[0],i=e[1],n=e[2],h=e[3],a=Math.sin(r),o=Math.cos(r);return t[0]=s*o-n*a,t[1]=i*o+h*a,t[2]=n*o+s*a,t[3]=h*o-i*a,t}function u(t,e,r){r*=.5;let s=e[0],i=e[1],n=e[2],h=e[3],a=Math.sin(r),o=Math.cos(r);return t[0]=s*o+i*a,t[1]=i*o-s*a,t[2]=n*o+h*a,t[3]=h*o-n*a,t}function c(t,e,r,s){let i,n,h,a,o,u=e[0],c=e[1],l=e[2],m=e[3],d=r[0],p=r[1],f=r[2],M=r[3];return n=u*d+c*p+l*f+m*M,n<0&&(n=-n,d=-d,p=-p,f=-f,M=-M),1-n>1e-6?(i=Math.acos(n),h=Math.sin(i),a=Math.sin((1-s)*i)/h,o=Math.sin(s*i)/h):(a=1-s,o=s),t[0]=a*u+o*d,t[1]=a*c+o*p,t[2]=a*l+o*f,t[3]=a*m+o*M,t}function l(t,e){let r=e[0],s=e[1],i=e[2],n=e[3],h=r*r+s*s+i*i+n*n,a=h?1/h:0;return t[0]=-r*a,t[1]=-s*a,t[2]=-i*a,t[3]=n*a,t}function m(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t}function d(t,e){let r,s=e[0]+e[4]+e[8];if(s>0)r=Math.sqrt(s+1),t[3]=.5*r,r=.5/r,t[0]=(e[5]-e[7])*r,t[1]=(e[6]-e[2])*r,t[2]=(e[1]-e[3])*r;else{let s=0;e[4]>e[0]&&(s=1),e[8]>e[3*s+s]&&(s=2);let i=(s+1)%3,n=(s+2)%3;r=Math.sqrt(e[3*s+s]-e[3*i+i]-e[3*n+n]+1),t[s]=.5*r,r=.5/r,t[3]=(e[3*i+n]-e[3*n+i])*r,t[i]=(e[3*i+s]+e[3*s+i])*r,t[n]=(e[3*n+s]+e[3*s+n])*r}return t}function p(t,e,r="YXZ"){let s=Math.sin(.5*e[0]),i=Math.cos(.5*e[0]),n=Math.sin(.5*e[1]),h=Math.cos(.5*e[1]),a=Math.sin(.5*e[2]),o=Math.cos(.5*e[2]);return"XYZ"===r?(t[0]=s*h*o+i*n*a,t[1]=i*n*o-s*h*a,t[2]=i*h*a+s*n*o,t[3]=i*h*o-s*n*a):"YXZ"===r?(t[0]=s*h*o+i*n*a,t[1]=i*n*o-s*h*a,t[2]=i*h*a-s*n*o,t[3]=i*h*o+s*n*a):"ZXY"===r?(t[0]=s*h*o-i*n*a,t[1]=i*n*o+s*h*a,t[2]=i*h*a+s*n*o,t[3]=i*h*o-s*n*a):"ZYX"===r?(t[0]=s*h*o-i*n*a,t[1]=i*n*o+s*h*a,t[2]=i*h*a-s*n*o,t[3]=i*h*o+s*n*a):"YZX"===r?(t[0]=s*h*o+i*n*a,t[1]=i*n*o+s*h*a,t[2]=i*h*a-s*n*o,t[3]=i*h*o-s*n*a):"XZY"===r&&(t[0]=s*h*o-i*n*a,t[1]=i*n*o-s*h*a,t[2]=i*h*a+s*n*o,t[3]=i*h*o+s*n*a),t}const f=s.copy,M=s.set,g=s.add,x=s.scale,y=s.dot,w=s.lerp,v=s.length,j=s.normalize},"./node_modules/ogl/src/math/functions/Vec4Func.js":(t,e,r)=>{r.r(e),r.d(e,{add:()=>n,copy:()=>s,dot:()=>u,length:()=>a,lerp:()=>c,normalize:()=>o,scale:()=>h,set:()=>i});function s(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function i(t,e,r,s,i){return t[0]=e,t[1]=r,t[2]=s,t[3]=i,t}function n(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t[3]=e[3]+r[3],t}function h(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t}function a(t){let e=t[0],r=t[1],s=t[2],i=t[3];return Math.sqrt(e*e+r*r+s*s+i*i)}function o(t,e){let r=e[0],s=e[1],i=e[2],n=e[3],h=r*r+s*s+i*i+n*n;return h>0&&(h=1/Math.sqrt(h)),t[0]=r*h,t[1]=s*h,t[2]=i*h,t[3]=n*h,t}function u(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]}function c(t,e,r,s){let i=e[0],n=e[1],h=e[2],a=e[3];return t[0]=i+s*(r[0]-i),t[1]=n+s*(r[1]-n),t[2]=h+s*(r[2]-h),t[3]=a+s*(r[3]-a),t}}},(function(t){t.h=()=>"367c02787f4a8f66a390"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,