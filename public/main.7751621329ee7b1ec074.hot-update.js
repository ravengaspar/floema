/*! For license information please see main.7751621329ee7b1ec074.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/animations/Title.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var n=s("./app/classes/Animation.js"),a=s("./node_modules/gsap/index.js"),i=s("./app/utils/text.js");class l extends n.default{constructor({element:e,elements:t}){super({element:e,elements:t}),(0,i.split)({element:this.element,append:!0}),(0,i.split)({element:this.element,append:!0}),this.elementLinesSpans=this.element.querySelectorAll("span span")}animateIn(){a.default.set(this.element,{autoAlpha:1}),a.default.fromTo(this.elementsLines,{y:"100%"},{delay:.5,duration:1.5,stagger:[],y:"0%"})}animateOut(){a.default.set(this.element,{autoAlpha:0})}onResize(){this.elementsLines=(0,i.calculate)(this.elementLinesSpans)}}},"./app/classes/Animation.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var n=s("./app/classes/Component.js"),a=s("./node_modules/console-browserify/index.js");class i extends n.default{constructor({element:e,elements:t}){super({element:e,elements:t}),this.createObserver(),this.animateOut()}createObserver(){this.observer=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(a.log("animate in"),this.animateIn()):(a.log("animate out"),this.animateOut())}))})),this.observer.observe(this.element)}animateOut(){}animateIn(){}}}},(function(e){e.h=()=>"e8aa7b8192cb10ca7a90"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi43NzUxNjIxMzI5ZWU3YjFlYzA3NC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cU9BSWUsTUFBTUEsVUFBY0MsRUFBQUEsUUFDakNDLGFBQVksUUFBRUMsRUFBRixTQUFXQyxJQUNyQkMsTUFBTSxDQUFFRixVQUFTQyxjQUVqQkUsRUFBQUEsRUFBQUEsT0FBTSxDQUNKSCxRQUFTSSxLQUFLSixRQUNkSyxRQUFRLEtBRVZGLEVBQUFBLEVBQUFBLE9BQU0sQ0FDSkgsUUFBU0ksS0FBS0osUUFDZEssUUFBUSxJQUdWRCxLQUFLRSxrQkFBb0JGLEtBQUtKLFFBQVFPLGlCQUFpQixZQUN4RCxDQUVEQyxZQUNFQyxFQUFBQSxRQUFBQSxJQUFTTCxLQUFLSixRQUFTLENBQ3JCVSxVQUFXLElBR2JELEVBQUFBLFFBQUFBLE9BQ0VMLEtBQUtPLGNBQ0wsQ0FDRUMsRUFBRyxRQUVMLENBQ0VDLE1BQU8sR0FDUEMsU0FBVSxJQUNWQyxRQUFTLEdBR1RILEVBQUcsTUFHUixDQUNESSxhQUNFUCxFQUFBQSxRQUFBQSxJQUFTTCxLQUFLSixRQUFTLENBQ3JCVSxVQUFXLEdBRWQsQ0FFRE8sV0FDRWIsS0FBS08sZUFBZ0JPLEVBQUFBLEVBQUFBLFdBQVVkLEtBQUtFLGtCQUNyQyxpS0M5Q1ksTUFBTVIsVUFBa0JxQixFQUFBQSxRQUNyQ3BCLGFBQVksUUFBRUMsRUFBRixTQUFXQyxJQUNyQkMsTUFBTSxDQUFFRixVQUFTQyxhQUVqQkcsS0FBS2dCLGlCQUVMaEIsS0FBS1ksWUFDTixDQUVESSxpQkFDRWhCLEtBQUtpQixTQUFXLElBQUlDLHNCQUFzQkMsSUFDeENBLEVBQVFDLFNBQVNDLElBQ1hBLEVBQU1DLGdCQUNSQyxFQUFRQyxJQUFJLGNBQ1p4QixLQUFLSSxjQUVMbUIsRUFBUUMsSUFBSSxlQUNaeEIsS0FBS1ksYUFDTixHQVBILElBV0ZaLEtBQUtpQixTQUFTUSxRQUFRekIsS0FBS0osUUFDNUIsQ0FFRGdCLGFBQWUsQ0FFZlIsWUFBYyxrQkM3QmhCc0IsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2ltbWVyc2l2ZS13ZWJzaXRlLy4vYXBwL2FuaW1hdGlvbnMvVGl0bGUuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvLi9hcHAvY2xhc3Nlcy9BbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZlLXdlYnNpdGUvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBbmltYXRpb24gZnJvbSBcImNsYXNzZXMvQW5pbWF0aW9uXCI7XG5pbXBvcnQgR1NBUCBmcm9tIFwiZ3NhcFwiO1xuaW1wb3J0IHsgY2FsY3VsYXRlLCBzcGxpdCB9IGZyb20gXCJ1dGlscy90ZXh0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpdGxlIGV4dGVuZHMgQW5pbWF0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBlbGVtZW50cyB9KSB7XG4gICAgc3VwZXIoeyBlbGVtZW50LCBlbGVtZW50cyB9KTtcblxuICAgIHNwbGl0KHtcbiAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudCxcbiAgICAgIGFwcGVuZDogdHJ1ZSxcbiAgICB9KTtcbiAgICBzcGxpdCh7XG4gICAgICBlbGVtZW50OiB0aGlzLmVsZW1lbnQsXG4gICAgICBhcHBlbmQ6IHRydWUsXG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnRMaW5lc1NwYW5zID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJzcGFuIHNwYW5cIik7XG4gIH1cblxuICBhbmltYXRlSW4oKSB7XG4gICAgR1NBUC5zZXQodGhpcy5lbGVtZW50LCB7XG4gICAgICBhdXRvQWxwaGE6IDEsXG4gICAgfSk7XG5cbiAgICBHU0FQLmZyb21UbyhcbiAgICAgIHRoaXMuZWxlbWVudHNMaW5lcyxcbiAgICAgIHtcbiAgICAgICAgeTogXCIxMDAlXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBkZWxheTogMC41LFxuICAgICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgICBzdGFnZ2VyOiBbXG5cbiAgICAgICAgXSxcbiAgICAgICAgeTogXCIwJVwiLFxuICAgICAgfVxuICAgICk7XG4gIH1cbiAgYW5pbWF0ZU91dCgpIHtcbiAgICBHU0FQLnNldCh0aGlzLmVsZW1lbnQsIHtcbiAgICAgIGF1dG9BbHBoYTogMCxcbiAgICB9KTtcbiAgfVxuXG4gIG9uUmVzaXplKCkge1xuICAgIHRoaXMuZWxlbWVudHNMaW5lcyA9IGNhbGN1bGF0ZSh0aGlzLmVsZW1lbnRMaW5lc1NwYW5zKTtcbiAgfVxufVxuIiwiaW1wb3J0IENvbXBvbmVudCBmcm9tIFwiY2xhc3Nlcy9Db21wb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQW5pbWF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBlbGVtZW50cyB9KSB7XG4gICAgc3VwZXIoeyBlbGVtZW50LCBlbGVtZW50cyB9KTtcblxuICAgIHRoaXMuY3JlYXRlT2JzZXJ2ZXIoKTtcblxuICAgIHRoaXMuYW5pbWF0ZU91dCgpO1xuICB9XG5cbiAgY3JlYXRlT2JzZXJ2ZXIoKSB7XG4gICAgdGhpcy5vYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZW50cmllcykgPT4ge1xuICAgICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xuICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImFuaW1hdGUgaW5cIik7XG4gICAgICAgICAgdGhpcy5hbmltYXRlSW4oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImFuaW1hdGUgb3V0XCIpO1xuICAgICAgICAgIHRoaXMuYW5pbWF0ZU91dCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLmVsZW1lbnQpO1xuICB9XG5cbiAgYW5pbWF0ZU91dCgpIHt9XG5cbiAgYW5pbWF0ZUluKCkge31cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImU4YWE3YjgxOTJjYjEwY2E3YTkwXCIpIl0sIm5hbWVzIjpbIlRpdGxlIiwiQW5pbWF0aW9uIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJzdXBlciIsInNwbGl0IiwidGhpcyIsImFwcGVuZCIsImVsZW1lbnRMaW5lc1NwYW5zIiwicXVlcnlTZWxlY3RvckFsbCIsImFuaW1hdGVJbiIsIkdTQVAiLCJhdXRvQWxwaGEiLCJlbGVtZW50c0xpbmVzIiwieSIsImRlbGF5IiwiZHVyYXRpb24iLCJzdGFnZ2VyIiwiYW5pbWF0ZU91dCIsIm9uUmVzaXplIiwiY2FsY3VsYXRlIiwiQ29tcG9uZW50IiwiY3JlYXRlT2JzZXJ2ZXIiLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImlzSW50ZXJzZWN0aW5nIiwiY29uc29sZSIsImxvZyIsIm9ic2VydmUiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=