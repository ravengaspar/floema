/*! For license information please see main.3b2e561664e0ee87b234.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/classes/Component.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var n=s("./node_modules/events/events.js"),l=s("./node_modules/lodash/each.js");class r extends n{constructor({element:e,elements:t}){super(),this.selector=e,this.selectorChildren={...t},this.create(),this.addEventListeners()}create(){this.element=document.querySelector(this.selector),this.elements={},l(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}addEventListeners(){}removeEventListeners(){}}},"./app/components/Preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var n=s("./app/classes/Component.js"),l=s("./node_modules/lodash/each.js"),r=s("./node_modules/gsap/index.js"),o=s("./app/utils/text.js");class i extends n.default{constructor(){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text",images:document.querySelectorAll("img")}}),(0,o.split)({element:this.elements.title,expression:"<br>"}),(0,o.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){l(this.elements.images,(e=>{e.onload=t=>this.onAssetLoaded(e),e.src=e.getAttribute("data-src")}))}onAssetLoaded(e){this.length+=1;const t=this.length/this.elements.images.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.animateOut=r.default.timeline({delay:2}),this.animateOut.to(this.elements.titleSpans,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"}),this.animateOut.to(this.elements.numberText,{autoAlpha:0,duration:1.5,ease:"expo.out",stagger:.1,y:"100%"},"-=1.4"),this.animateOut.call((e=>{}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}},"./app/utils/text.js":(e,t,s)=>{s.r(t),s.d(t,{calculate:()=>r,split:()=>l});var n=s("./node_modules/lodash/each.js");function l({element:e,expression:t=" ",append:s=!0}){const l=function(e,t){const s=e.split("<br>");let l=[];return n(s,((e,s)=>{s>0&&l.push("<br>"),l=l.concat(e.split(t));let r=!1,o="";const i=[];n(l,(e=>{r||!e.includes("<a")&&!e.includes("<strong")||(o="",r=!0),r&&(o+=` ${e}`),r&&(e.includes("/a>")||e.includes("/strong>"))&&(i.push(o),o=""),r||""!==o||i.push(e),r&&(e.includes("/a>")||e.includes("/strong>"))&&(r=!1)})),l=i})),l}(e.innerHTML.toString().trim(),t);let r="";n(l,(e=>{if(e.indexOf("<br>")>-1){const t=e.split("<br>");n(t,((e,t)=>{r+=t>0?"<br>"+o(e):o(e)}))}else r+=o(e)})),e.innerHTML=r;const i=e.querySelectorAll("span");return s&&n(i,(e=>{const t=1===e.textContent.length,s=""!==e.innerHTML.trim(),n="&"!==e.textContent,l="-"!==e.textContent;t&&s&&n&&l&&(e.innerHTML=`${e.textContent}&nbsp;`)})),i}function r(e){if(!e.length)return;const t=[];let s=[],l=e[0].offsetTop;return n(e,((n,r)=>{n.offsetTop===l&&s.push(n),n.offsetTop!==l&&(t.push(s),s=[],s.push(n),l=n.offsetTop),r+1===e.length&&t.push(s)})),t}function o(e){return""===(e=e.trim())||" "===e?e:"<br>"===e?"<br>":`<span>${e}</span>`+(e.length>1?" ":"")}}},(function(e){e.h=()=>"5c46374027a211f13a78"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,