/*! For license information please see main.b4fe2c715b4f38257b5b.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var n=s("./app/classes/Component.js"),a=s("./node_modules/gsap/index.js"),o=s("./app/utils/text.js"),i=s("./node_modules/ogl/src/core/Texture.js");class r extends n.default{constructor({canvas:e}){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text"}}),this.canvas=e,window.TEXTURES={},(0,o.split)({element:this.elements.title,expression:"<br>"}),(0,o.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){window.ASSETS.forEach((e=>{const t=new i.Texture(this.canvas.gl,{generateMipmaps:!1}),s=new window.Image;s.crossOrigin="anonymous",s.src=e,s.onload=e=>{t.image=s,this.onAssetLoaded()},window.TEXTURES[e]=t}))}onAssetLoaded(e){this.length+=1;const t=this.length/window.ASSETS.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.animateOut=a.default.timeline({delay:1}),this.animateOut.to(this.elements.titleSpans,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"}),this.animateOut.to(this.elements.numberText,{autoAlpha:0,duration:1.5,ease:"expo.out",stagger:.1,y:50},"-=1.4"),this.animateOut.to(this.element,{duration:1.5,ease:"expo.out",scaleY:0,transformOrigin:"100% 100%"},"-=1"),this.animateOut.call((e=>{this.emit("completed")}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"2731903233a7b6283ad3"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5iNGZlMmM3MTViNGYzODI1N2I1Yi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NFFBS2UsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3RDQyxhQUFZLE9BQUVDLElBQ2JDLE1BQU0sQ0FDTEMsUUFBUyxhQUNUQyxTQUFVLENBQ1RDLE1BQU8sbUJBQ1BDLE9BQVEscUJBQ1JDLFdBQVksOEJBSWRDLEtBQUtQLE9BQVNBLEVBRWRRLE9BQU9DLFNBQVcsQ0FBQyxHQUVuQkMsRUFBQUEsRUFBQUEsT0FBTSxDQUNMUixRQUFTSyxLQUFLSixTQUFTQyxNQUN2Qk8sV0FBWSxVQUViRCxFQUFBQSxFQUFBQSxPQUFNLENBQ0xSLFFBQVNLLEtBQUtKLFNBQVNDLE1BQ3ZCTyxXQUFZLFNBR2JKLEtBQUtKLFNBQVNTLFdBQWFMLEtBQUtKLFNBQVNDLE1BQU1TLGlCQUFpQixhQUVoRU4sS0FBS08sT0FBUyxFQUVkUCxLQUFLUSxjQUNMLENBRURBLGVBQ0NQLE9BQU9RLE9BQU9DLFNBQVFDLElBQ3JCLE1BQU1DLEVBQVUsSUFBSUMsRUFBQUEsUUFBUWIsS0FBS1AsT0FBT3FCLEdBQUksQ0FDM0NDLGlCQUFpQixJQUdaQyxFQUFRLElBQUlmLE9BQU9nQixNQUV6QkQsRUFBTUUsWUFBYyxZQUNwQkYsRUFBTUcsSUFBTVIsRUFDWkssRUFBTUksT0FBU0MsSUFDZFQsRUFBUUQsTUFBUUssRUFFaEJoQixLQUFLc0IsZUFBTCxFQUdEckIsT0FBT0MsU0FBU1MsR0FBU0MsQ0FBekIsR0FFRCxDQUVEVSxjQUFjWCxHQUNiWCxLQUFLTyxRQUFVLEVBRWYsTUFBTWdCLEVBQVV2QixLQUFLTyxPQUFTTixPQUFPUSxPQUFPRixPQUM1Q1AsS0FBS0osU0FBU0csV0FBV3lCLFVBQWEsR0FBRUMsS0FBS0MsTUFBZ0IsSUFBVkgsTUFFbkMsSUFBWkEsR0FDSHZCLEtBQUsyQixVQUVOLENBRURBLFdBQ0MsT0FBTyxJQUFJQyxTQUFRQyxJQUNsQjdCLEtBQUs4QixXQUFhQyxFQUFBQSxRQUFBQSxTQUFjLENBQy9CQyxNQUFPLElBR1JoQyxLQUFLOEIsV0FBV0csR0FBR2pDLEtBQUtKLFNBQVNTLFdBQVksQ0FDNUM2QixTQUFVLElBQ1ZDLEtBQU0sV0FDTkMsUUFBUyxHQUNUQyxFQUFHLFNBR0pyQyxLQUFLOEIsV0FBV0csR0FDZmpDLEtBQUtKLFNBQVNHLFdBQ2QsQ0FDQ3VDLFVBQVcsRUFDWEosU0FBVSxJQUNWQyxLQUFNLFdBQ05DLFFBQVMsR0FDVEMsRUFBRyxJQUVKLFNBR0RyQyxLQUFLOEIsV0FBV0csR0FDZmpDLEtBQUtMLFFBQ0wsQ0FDQ3VDLFNBQVUsSUFDVkMsS0FBTSxXQUNOSSxPQUFRLEVBQ1JDLGdCQUFpQixhQUVsQixPQUdEeEMsS0FBSzhCLFdBQVdXLE1BQUtwQixJQUNwQnJCLEtBQUswQyxLQUFLLFlBQVYsR0FERCxHQUlELENBRURDLFVBQ0MzQyxLQUFLTCxRQUFRaUQsV0FBV0MsWUFBWTdDLEtBQUtMLFFBQ3pDLGtCQy9HRm1ELEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9QcmVsb2FkZXIuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcG9uZW50IGZyb20gJ2NsYXNzZXMvQ29tcG9uZW50J1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCB7IHNwbGl0IH0gZnJvbSAndXRpbHMvdGV4dCdcbmltcG9ydCB7IFRleHR1cmUgfSBmcm9tICdvZ2wnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRlciBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHsgY2FudmFzIH0pIHtcblx0XHRzdXBlcih7XG5cdFx0XHRlbGVtZW50OiAnLnByZWxvYWRlcicsXG5cdFx0XHRlbGVtZW50czoge1xuXHRcdFx0XHR0aXRsZTogJy5wcmVsb2FkZXJfX3RleHQnLFxuXHRcdFx0XHRudW1iZXI6ICcucHJlbG9hZGVyX19udW1iZXInLFxuXHRcdFx0XHRudW1iZXJUZXh0OiAnLnByZWxvYWRlcl9fbnVtYmVyX190ZXh0Jyxcblx0XHRcdH0sXG5cdFx0fSlcblxuXHRcdHRoaXMuY2FudmFzID0gY2FudmFzXG5cblx0XHR3aW5kb3cuVEVYVFVSRVMgPSB7fVxuXG5cdFx0c3BsaXQoe1xuXHRcdFx0ZWxlbWVudDogdGhpcy5lbGVtZW50cy50aXRsZSxcblx0XHRcdGV4cHJlc3Npb246ICc8YnI+Jyxcblx0XHR9KVxuXHRcdHNwbGl0KHtcblx0XHRcdGVsZW1lbnQ6IHRoaXMuZWxlbWVudHMudGl0bGUsXG5cdFx0XHRleHByZXNzaW9uOiAnPGJyPicsXG5cdFx0fSlcblxuXHRcdHRoaXMuZWxlbWVudHMudGl0bGVTcGFucyA9IHRoaXMuZWxlbWVudHMudGl0bGUucXVlcnlTZWxlY3RvckFsbCgnc3BhbiBzcGFuJylcblxuXHRcdHRoaXMubGVuZ3RoID0gMFxuXG5cdFx0dGhpcy5jcmVhdGVMb2FkZXIoKVxuXHR9XG5cblx0Y3JlYXRlTG9hZGVyKCkge1xuXHRcdHdpbmRvdy5BU1NFVFMuZm9yRWFjaChpbWFnZSA9PiB7XG5cdFx0XHRjb25zdCB0ZXh0dXJlID0gbmV3IFRleHR1cmUodGhpcy5jYW52YXMuZ2wsIHtcblx0XHRcdFx0Z2VuZXJhdGVNaXBtYXBzOiBmYWxzZSxcblx0XHRcdH0pXG5cblx0XHRcdGNvbnN0IG1lZGlhID0gbmV3IHdpbmRvdy5JbWFnZSgpXG5cblx0XHRcdG1lZGlhLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cydcblx0XHRcdG1lZGlhLnNyYyA9IGltYWdlXG5cdFx0XHRtZWRpYS5vbmxvYWQgPSBfID0+IHtcblx0XHRcdFx0dGV4dHVyZS5pbWFnZSA9IG1lZGlhXG5cblx0XHRcdFx0dGhpcy5vbkFzc2V0TG9hZGVkKClcblx0XHRcdH1cblxuXHRcdFx0d2luZG93LlRFWFRVUkVTW2ltYWdlXSA9IHRleHR1cmVcblx0XHR9KVxuXHR9XG5cblx0b25Bc3NldExvYWRlZChpbWFnZSkge1xuXHRcdHRoaXMubGVuZ3RoICs9IDFcblxuXHRcdGNvbnN0IHBlcmNlbnQgPSB0aGlzLmxlbmd0aCAvIHdpbmRvdy5BU1NFVFMubGVuZ3RoXG5cdFx0dGhpcy5lbGVtZW50cy5udW1iZXJUZXh0LmlubmVySFRNTCA9IGAke01hdGgucm91bmQocGVyY2VudCAqIDEwMCl9JWBcblxuXHRcdGlmIChwZXJjZW50ID09PSAxKSB7XG5cdFx0XHR0aGlzLm9uTG9hZGVkKClcblx0XHR9XG5cdH1cblxuXHRvbkxvYWRlZCgpIHtcblx0XHRyZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG5cdFx0XHR0aGlzLmFuaW1hdGVPdXQgPSBHU0FQLnRpbWVsaW5lKHtcblx0XHRcdFx0ZGVsYXk6IDEsXG5cdFx0XHR9KVxuXG5cdFx0XHR0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy50aXRsZVNwYW5zLCB7XG5cdFx0XHRcdGR1cmF0aW9uOiAxLjUsXG5cdFx0XHRcdGVhc2U6ICdleHBvLm91dCcsXG5cdFx0XHRcdHN0YWdnZXI6IDAuMSxcblx0XHRcdFx0eTogJzEwMCUnLFxuXHRcdFx0fSlcblxuXHRcdFx0dGhpcy5hbmltYXRlT3V0LnRvKFxuXHRcdFx0XHR0aGlzLmVsZW1lbnRzLm51bWJlclRleHQsXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRhdXRvQWxwaGE6IDAsXG5cdFx0XHRcdFx0ZHVyYXRpb246IDEuNSxcblx0XHRcdFx0XHRlYXNlOiAnZXhwby5vdXQnLFxuXHRcdFx0XHRcdHN0YWdnZXI6IDAuMSxcblx0XHRcdFx0XHR5OiA1MCxcblx0XHRcdFx0fSxcblx0XHRcdFx0Jy09MS40J1xuXHRcdFx0KVxuXG5cdFx0XHR0aGlzLmFuaW1hdGVPdXQudG8oXG5cdFx0XHRcdHRoaXMuZWxlbWVudCxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGR1cmF0aW9uOiAxLjUsXG5cdFx0XHRcdFx0ZWFzZTogJ2V4cG8ub3V0Jyxcblx0XHRcdFx0XHRzY2FsZVk6IDAsXG5cdFx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnMTAwJSAxMDAlJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Jy09MSdcblx0XHRcdClcblxuXHRcdFx0dGhpcy5hbmltYXRlT3V0LmNhbGwoXyA9PiB7XG5cdFx0XHRcdHRoaXMuZW1pdCgnY29tcGxldGVkJylcblx0XHRcdH0pXG5cdFx0fSlcblx0fVxuXG5cdGRlc3Ryb3koKSB7XG5cdFx0dGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KVxuXHR9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIyNzMxOTAzMjMzYTdiNjI4M2FkM1wiKSJdLCJuYW1lcyI6WyJQcmVsb2FkZXIiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsImNhbnZhcyIsInN1cGVyIiwiZWxlbWVudCIsImVsZW1lbnRzIiwidGl0bGUiLCJudW1iZXIiLCJudW1iZXJUZXh0IiwidGhpcyIsIndpbmRvdyIsIlRFWFRVUkVTIiwic3BsaXQiLCJleHByZXNzaW9uIiwidGl0bGVTcGFucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJjcmVhdGVMb2FkZXIiLCJBU1NFVFMiLCJmb3JFYWNoIiwiaW1hZ2UiLCJ0ZXh0dXJlIiwiVGV4dHVyZSIsImdsIiwiZ2VuZXJhdGVNaXBtYXBzIiwibWVkaWEiLCJJbWFnZSIsImNyb3NzT3JpZ2luIiwic3JjIiwib25sb2FkIiwiXyIsIm9uQXNzZXRMb2FkZWQiLCJwZXJjZW50IiwiaW5uZXJIVE1MIiwiTWF0aCIsInJvdW5kIiwib25Mb2FkZWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImFuaW1hdGVPdXQiLCJHU0FQIiwiZGVsYXkiLCJ0byIsImR1cmF0aW9uIiwiZWFzZSIsInN0YWdnZXIiLCJ5IiwiYXV0b0FscGhhIiwic2NhbGVZIiwidHJhbnNmb3JtT3JpZ2luIiwiY2FsbCIsImVtaXQiLCJkZXN0cm95IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9