/*! For license information please see main.8944f360643b62f50895.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/components/Canvas/About/Gallery.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});var i=t("./node_modules/ogl/src/core/Transform.js"),h=t("./node_modules/gsap/index.js"),r=t("./node_modules/lodash/map.js"),o=t("./app/components/Canvas/About/Media.js");class n{constructor({element:e,geometry:s,index:t,gl:h,scene:r,sizes:o}){this.element=e,this.elementWrapper=e.querySelector(".about__gallery__wrapper"),this.geometry=s,this.index=t,this.gl=h,this.scene=r,this.sizes=o,this.group=new i.Transform,this.scroll={current:0,start:0,target:0,lerp:.1},this.createMedias(),this.group.setParent(this.scene)}createMedias(){this.mediasElements=this.element.querySelectorAll(".about__gallery__media"),this.medias=r(this.mediasElements,((e,s)=>new o.default({element:e,geometry:this.geometry,index:s,gl:this.gl,scene:this.group,sizes:this.sizes})))}onResize(e){this.bounds=this.elementWrapper.getBoundingClientRect(),this.sizes=e.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,r(this.medias,(s=>s.onResize(e,this.scroll.current)))}onTouchDown({x:e,y:s}){this.scroll.start=this.scroll.current}onTouchMove({x:e,y:s}){const t=e.start-e.end;this.scroll.target=this.scroll.start-t}onTouchUp({x:e,y:s}){}update(){this.bounds&&(this.scroll.current<this.scroll.target?this.direction="right":this.scroll.current>this.scroll.target&&(this.direction="left"),this.scroll.current=h.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),r(this.medias,((e,s)=>{const t=e.mesh.scale.x/2;if(" left"===this.direction){e.mesh.position.x+t<-this.sizes.width/2&&(e.extra+=this.width)}else if("right"===this.direction){e.mesh.position.x-t>this.sizes.width/2&&(e.extra-=this.width)}e.update(this.scroll.current)})))}}},"./app/components/Canvas/About/Media.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var i=t("./node_modules/ogl/src/core/Texture.js"),h=t("./node_modules/ogl/src/core/Program.js"),r=t("./node_modules/ogl/src/core/Mesh.js"),o=t("./app/shaders/plane-fragment.glsl"),n=t("./app/shaders/plane-vertex.glsl");const l=class{constructor({element:e,geometry:s,gl:t,index:i,scene:h,sizes:r}){this.element=e,this.geometry=s,this.gl=t,this.scene=h,this.index=i,this.sizes=r,this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){this.texture=new i.Texture(this.gl);const e=this.element.querySelector("img");this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=e.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:o.default,vertex:n.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new r.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(e),this.updateX(),this.updateY()}onResize(e,s){this.extra=0,this.createBounds(e),this.updateX(s),this.updateY(0)}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height}update(e){this.bounds&&(this.updateX(e),this.updateY(0))}}},"./app/components/Canvas/About/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});var i=t("./node_modules/ogl/src/core/Transform.js"),h=t("./node_modules/ogl/src/extras/Plane.js"),r=t("./node_modules/lodash/map.js"),o=t("./app/components/Canvas/About/Gallery.js");const n=class{constructor({gl:e,scene:s,sizes:t}){this.gl=e,this.sizes=t,this.group=new i.Transform,this.createGeometry(),this.createGalleries(),this.group.setParent(s)}createGeometry(){this.geometry=new h.Plane(this.gl)}createGalleries(){this.galleriesElements=document.querySelectorAll(".about__gallery"),this.galleries=r(this.galleriesElements,((e,s)=>new o.default({element:e,geometry:this.geometry,index:s,gl:this.gl,scene:this.group,sizes:this.sizes})))}onResize(e){r(this.galleries,(s=>s.onResize(e)))}onTouchDown(e){r(this.galleries,(s=>s.onTouchDown(e)))}onTouchMove(e){r(this.galleries,(s=>s.onTouchMove(e)))}onTouchUp(e){r(this.galleries,(s=>s.onTouchUp(e)))}onWheel({pixelX:e,pixelY:s}){}update(){this.galleryBounds&&r(this.galleries,(e=>e.update()))}destroy(){r(this.galleries)}}}},(function(e){e.h=()=>"1427eef8282f23eabd98"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,