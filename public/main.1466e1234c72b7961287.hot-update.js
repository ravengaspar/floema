/*! For license information please see main.1466e1234c72b7961287.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersive_website("main",{"./app/animations/Paragraph.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var i=s("./app/classes/Animation.js"),n=s("./node_modules/gsap/index.js"),a=s("./node_modules/lodash/each.js"),l=s("./app/utils/text.js");class o extends i.default{constructor({element:e,elements:t}){super({element:e,elements:t}),this.elementsLinesSpans=(0,l.split)({element:this.element,append:!0})}animateIn(){this.timelineIn=n.default.timeline({delay:.5}),this.timelineIn.set(this.element,{autoAlpha:1}),n.default.set(this.element,{autoAlpha:1}),a(this.elementsLines,((e,t)=>{n.default.fromTo(e,{autoAlpha:0,y:"100%"},{autoAlpha:1,delay:.2*t,duration:1.5,ease:"expo.out",y:"0%"})}),0)}animateOut(){n.default.set(this.element,{autoAlpha:0})}onResize(){this.elementsLines=(0,l.calculate)(this.elementLinesSpans)}}},"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/lodash/each.js"),n=s("./node_modules/lodash/map.js"),a=s("./node_modules/gsap/index.js"),l=s("./node_modules/prefix/index.js"),o=s("./node_modules/normalize-wheel/index.js"),r=s("./app/animations/Title.js"),h=s("./app/animations/Paragraph.js"),m=s("./node_modules/console-browserify/index.js");class d{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabel:'[data-animation="label"]'},this.id=s,this.onMouseWheelEvent=this.onMouseWheel.bind(this),this.transformPrefix=l("transform")}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},i(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations()}createAnimations(){this.animations=[],this.animationsTitles=n(this.elements.animationsTitles,(e=>new r.default({element:e}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=n(this.elements.animationsParagraphs,(e=>new h.default({element:e}))),this.animations.push(...this.animationsParagraphs),this.animationsLabel=n(this.elements.animationsLabel,(e=>new r.default({element:e}))),this.animations.push(...this.animationsLabel)}show(){return new Promise((e=>{this.animationIn=a.default.timeline(),a.default.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{thisNaNpxoveEventListeners(),this.animationOut=a.default.timeline(),a.default.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=o(e);this.scroll.target+=t,m.log(t)}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),i(this.animationsTitles,(e=>e.onResize()))}update(){this.scroll.target=a.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=a.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){windowNaNpxoveEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"afd7c4a1a3c4a952a0de"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,